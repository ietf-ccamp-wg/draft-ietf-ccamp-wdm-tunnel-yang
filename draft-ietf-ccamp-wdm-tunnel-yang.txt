



CCAMP Working Group                                               A. Guo
Internet-Draft                                    Futurewei Technologies
Intended status: Standards Track                              S. Belotti
Expires: 25 October 2025                                           Nokia
                                                           G. Galimberti
                                                              Individual
                                                   J. E. L. de V. Mendez
                                                             Naudit HPCN
                                                           D. P. Burrero
                                          Universidad Autonoma de Madrid
                                                           23 April 2025


                   A YANG Data Model for WDM Tunnels
                draft-ietf-ccamp-wdm-tunnel-yang-latest

Abstract

   This document defines a YANG data model for the provisioning and
   management of Traffic Engineering (TE) tunnels and Label Switched
   Paths (LSPs) in Optical Networks (Wavelength Switched Optical
   Networks (WSON) and Flexi-Grid Dense Wavelength Division Multiplexing
   (DWDM) Networks).

   The YANG data model defined in this document conforms to the Network
   Management Datastore Architecture (NMDA).

About This Document

   This note is to be removed before publishing as an RFC.

   The latest revision of this draft can be found at https://ietf-ccamp-
   wg.github.io/draft-ietf-ccamp-wdm-tunnel-yang/draft-ietf-ccamp-wdm-
   tunnel-yang.html.  Status information for this document may be found
   at https://datatracker.ietf.org/doc/draft-ietf-ccamp-wdm-tunnel-
   yang/.

   Discussion of this document takes place on the Common Control and
   Measurement Plane Working Group mailing list (mailto:ccamp@ietf.org),
   which is archived at https://mailarchive.ietf.org/arch/browse/ccamp/.
   Subscribe at https://www.ietf.org/mailman/listinfo/ccamp/.

   Source for this draft and an issue tracker can be found at
   https://github.com/ietf-ccamp-wg/draft-ietf-ccamp-wdm-tunnel-yang.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 25 October 2025.

Copyright Notice

   Copyright (c) 2025 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
   2.  Conventions and Definitions
   3.  Overview
     3.1.  Integrated vs. External Optical Transponder
   4.  Example of Use
   5.  YANG Model for WDM Tunnel
     5.1.  YANG Tree
     5.2.  YANG Code
   6.  Security Considerations
   7.  IANA Considerations
   8.  References
     8.1.  Normative References
     8.2.  Informative References
   Acknowledgments
   Contributors
   Authors' Addresses

1.  Introduction

   Transport networks have evolved from traditional fixed-grid
   Wavelength Switched Optical Networks (WSON) [RFC6163] to more
   scalable and flexible elastic optical networks.  These utilize flexi-
   grid Dense Wavelength Division Multiplexing (DWDM) technologies
   [RFC7698] to optimize bandwidth usage.  Current DWDM Optical Network
   deployments may include fixed-grid WSON, flexi-grid DWDM, or a
   combination of both.

   In the optical domain, a WDM tunnel typically originates and
   concludes at a pair of transponders using one or more transceivers
   dependent upon the data rate and encoding type of the transceivers.
   These transponders are then connected to an intermediate line system
   composed of optical switches and multiplexers, including
   Reconfigurable Optical Add-Drop Multiplexers (ROADMs) and add-drop
   multiplexers, complemented by optical amplifiers to boost the
   transmission distance.  The optical wavelength can be routed from the
   transponder or an incoming fiber, through multiplexing, to various
   outgoing fibers in the DWDM network.  At optical nodes, wavelengths
   may undergo conversion via optical-electrical-optical (OEO)
   regenerators, depending on the switching setup and fiber
   configuration.

   Optical services, transmitted via analog signals, require careful
   provisioning across the network to maintain signal quality and
   prevent interference between different wavelength channels.  The
   technology within optical nodes, like tunable transceivers or
   Colorless, Directionless and Contentionless Flexi-grid (CDC-F)
   ROADMs, introduces specific constraints that can limit WDM tunnel
   path options.  These constraints must be factored into WDM tunnel
   provisioning and pre-computation.  Additionally, assessing the end-
   to-end optical performance metrics like Generalized Signal-to-noise
   Ratio (G-SNR), Bit Error Rate (BER), and Q-factor is crucial to
   ensure transmission quality and receiver signal integrity.

   This draft introduces a YANG [RFC7950] data model for setting up and
   managing TE tunnels and LSPs in DWDM Optical Networks.  It aims to
   provide an intent-based interface used by a control entity such as a
   Software-defined Network (SDN) controller at its northbound to
   establish services between endpoints, typically optical transponders.
   Clients can utilize this model to either partially or fully delegate
   service provisioning to the SDN controller, while still capable to
   express additional constraints to guide its operation.  Service
   provisioning can be as simple as identifying the source and
   destination transponders and delegate the rest of determination to
   the SDN controller, or as explicit as specifying a complete detailed
   path complete with tuned wavelengths and transceiver details.

   This document identifies the WDM tunnel components, parameters and
   their values, and characterizes the features and the performances of
   the WDM elements.  An application example is provided towards the end
   of the document to understand their utility better.

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

   The terminology for describing YANG data models is found in
   [RFC7950].

   Refer to [RFC7446] and [RFC7699] for the key terms used in this
   document.

   The following terms are defined in [RFC7950] and are not redefined
   here: - client

   *  server

   *  augment

   *  data model

   *  data node

   The following terms are defined in [RFC6241] and are not redefined
   here: - configuration data

   *  state data

3.  Overview

   The YANG data model in this draft builds upon the generic TE tunnel
   model from [I-D.ietf-teas-yang-te].  This base model is suitable for
   all TE-enabled networks and includes universal TE tunnel elements
   like node addresses, tunnel termination points (TTPs), and path-level
   constraints such as explicit path hops, label restrictions, and path
   diversity.  The current model enhances [I-D.ietf-teas-yang-te] by
   incorporating WDM-specific attributes and constraints relevant to WDM
   tunnels, including definitions for:

   *  Network-scope optical transceiver configuration constraints, e.g.,
      operational modes, transceiver tuning constraints

   *  Network-scope WDM path routing policies for influencing WDM TE
      path selection.  For exmaple, whether or not using regenerator or
      wavelength conversion is allowed, whether or not wavelength
      retuing is allowed for tunable transceivers, etc.

   *  Network-scope optical performance constraints, e.g. the
      generalized Signal-to-noise (G-SNR) margin and delta power of a
      feasible optical path

   *  Path-scope WDM layer constraints and transceiver configurations
      for working and protection path within a WDM tunnel

   *  List of WDM nodes, links, and optical wavelength that constitute
      an end-to-end WDM path

   *  Other relevant optical attributes which characterize the optical
      signal

   The attributes described above are optional, allowing the model to
   support both simplified and fully-explicit WDM tunnel provisioning to
   meet diverse client requirements.

   Additionally, the YANG model provides the status of a WDM tunnel,
   which includes:

   *  Computed paths for various roles such as working, protection, and
      restoration, indicating potential optical paths confirmed by the
      SDN controller via pre-computation.

   *  Actual LSPs for each tunnel path, representing the optical paths
      currently established in the network.

3.1.  Integrated vs. External Optical Transponder

   In optical networks built with traditional chassis-based DWDM optical
   equipment, optical transponder (OTs) are typically inserted into the
   chassis installed as cards.  WDM tunnels are established between
   pairs of OTs, with the SDN controller serving as the central entity
   for provisioning and managing these tunnels.

   In scenarios like data center interconnects (DCI), optical
   transponders may be externally mounted on a 'pizza box' and linked
   via dedicated fiber or wavelength multiplexer/demultiplexer to the
   optical line system.  These external OTs could be managed by the same
   SDN controller or a different entity, such as an orchestrator.
   Consequently, a WDM tunnel might be composed of several segments
   joined to create a continuous end-to-end tunnel.

   The YANG data model offers a cohesive interface for managing WDM
   tunnels and tunnel segments, irrespective of transponder location.

4.  Example of Use

   To illustrate the model's application, consider an optical network
   with various transponders, switches, and links.  A depicted topology
   outlines two WDM tunnel scenarios.  In the first, an end-to-end WDM
   tunnel (WDM Tunnel 1) comprises two physical paths (WDM Primary Path
   1 and 2) linking two integrated optical transponders, Transponder A
   and E, through WSON and Flexi-grid nodes.  The second scenario
   describes three WDM tunnel segments (WDM Tunnel Segment 2a to 2c)
   connecting two external OTs, External OT node X and Y, via the same
   nodes and links.

                                 WDM Tunnel 1
           <===================================================>
                            WDM Primary Path 1
           <--------------------------------------------------->

               WDM Tunnel         WDM Tunnel      WDM Tunnel
               Segment 2a         Segment 2b      Segment 2c
           <=================><===============><===============>
      +----------+                                        +----------+
      | External |                                        | External |
      |    OT    |<----------+                +---------->|    OT    |
      |  node X  |           |                |           |  node Y  |
      +----------+           |                |           +----------+
                             |                |
                             |                |
      +----------+           |                |           +----------+
      |  Flexi-  |           |                |           |  Flexi-  |
      |   grid   |           |                |           |   grid   |
      |  node A  |           |                |           |  node E  |
      |          |        +--v---+        +---v--+        |          |
      |          | Link 1 |Flexi-| Link 2 | WSON | Link 3 |          |
      |          |<------>| grid |<------>|      |<------>|          |
      |......... |        |node B|        |node C|        | .........|
      | Trans- : |        +------+        +------+        | : Trans- |
      | ponder : |                                        | : ponder |
      |    A   : |                +------+                | :    E   |
      |........: |     Link 4     |Flexi-|     Link 5     | :........|
      |          |                | grid |                |          |
      |          |<-------------->|node D|<-------------->|          |
      |          |                +------+                |          |
      +----------+                                        +----------+

           <--------------------------------------------------->
                             WDM Secondary Path 1

                         Figure 1: Topology Example

   To configure an end-to-end WDM tunnel to interconnect transponders A
   and E, first of all we have to populate the flexi-grid topology YANG
   model with all elements in the network:

   *  We define the transponders within nodes A and E as tunnel
      termination points (TTPs) and provide their internal local link
      connectivity towards the node interfaces.  We also provide nodes A
      and E identifiers, addresses and interfaces.

   *  We do the same for the nodes B, C and D, providing their
      identifiers, addresses and interfaces, as well as the internal
      connectivity matrix between interfaces.

   *  Then, we also define the links 1 to 5 that interconnect nodes,
      indicating which WSON or flexi-grid labels are available.

   *  Other information, such as the slot frequency and granularity are
      also provided.

   After the nodes, links and transponders have been defined using
   [I-D.ietf-ccamp-flexigrid-yang] and [RFC9094] we can configure the
   tunnel from the information we have stored in the flexi-grid
   topology, by querying which elements are available, and planning the
   resources that have to be provided on each situation, taking into
   account the global and path-specific WDM tunnel constraints.  Note
   that every element in the flexi-grid topology has a reference, and
   this is the way in which they are called in the tunnel.

   *  Depending on the case, it is possible to define either the source
      and destination node ports, or the source and destination node and
      transponder.  In our case, we would define a network tunnel, with
      source transponder A and source node B, and destination
      transponder E and destination node C.  Thus, we are going to
      follow path x.

   *  Then, for each link in the path x, we indicate which channel we
      are going to use, providing information about the slots, and what
      nodes are connected.

   *  Finally, the flexi-grid topology has to be updated with each
      element usage status each time a tunnel is created or torn down.

5.  YANG Model for WDM Tunnel

5.1.  YANG Tree

   module: ietf-wdm-tunnel

     augment /te:te/te:tunnels/te:tunnel:
       +--rw wdm-constraint
          +--rw transceiver-constraint
          |  +--rw operational-modes*            string
          |  +--rw otsi-carrier-frequency?       l0-types:frequency-thz
          |  +--rw tx-tune-constraints
          |  |  +--rw min-central-frequency?
          |  |  |       frequency-thz
          |  |  +--rw max-central-frequency?
          |  |  |       frequency-thz
          |  |  +--rw transceiver-tunability-granularity?
          |  |          frequency-ghz
          |  +--rw line-coding-bitrate*          identityref
          |  +--rw tx-channel-power?             l0-types:power-dbm
          |  +--rw preferred-rx-channel-power?   l0-types:power-dbm
          |  +--rw gsnr-extra-margin?            snr
          +--rw use-regen?                     boolean
          +--rw wavelength-conversion?         boolean
          +--rw wavelength-assignment?         identityref
          +--rw guard-band-size?               l0-types:frequency-thz
          +--rw matching-fwd-rev-wavelength?   boolean
          +--rw allow-retuning?                boolean
          +--rw delta-power?                   l0-types:power-ratio
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:explicit-route-objects
               /te:route-object-exclude-always/te:type
               /te:numbered-node-hop/te:numbered-node-hop:
       +--rw (node-position)?
          +--:(source)
          |  +--rw source-transceiver
          |     +--rw transponder-id?   uint32
          |     +--rw transceivers* [transceiver-id]
          |        +--rw transceiver-id                uint32
          |        +--rw otsi-carrier-id?              uint16
          |        +--rw operational-modes*            string
          |        +--rw otsi-carrier-frequency?
          |        |       l0-types:frequency-thz
          |        +--rw tx-tune-constraints
          |        |  +--rw min-central-frequency?
          |        |  |       frequency-thz
          |        |  +--rw max-central-frequency?
          |        |  |       frequency-thz
          |        |  +--rw transceiver-tunability-granularity?
          |        |          frequency-ghz
          |        +--rw line-coding-bitrate*          identityref
          |        +--rw tx-channel-power?
          |        |       l0-types:power-dbm
          |        +--rw preferred-rx-channel-power?
          |        |       l0-types:power-dbm
          |        +--rw gsnr-extra-margin?            snr
          +--:(destination)
          |  +--rw destination-transceiver
          |     +--rw transponder-id?   uint32
          |     +--rw transceivers* [transceiver-id]
          |        +--rw transceiver-id                uint32
          |        +--rw otsi-carrier-id?              uint16
          |        +--rw operational-modes*            string
          |        +--rw otsi-carrier-frequency?
          |        |       l0-types:frequency-thz
          |        +--rw tx-tune-constraints
          |        |  +--rw min-central-frequency?
          |        |  |       frequency-thz
          |        |  +--rw max-central-frequency?
          |        |  |       frequency-thz
          |        |  +--rw transceiver-tunability-granularity?
          |        |          frequency-ghz
          |        +--rw line-coding-bitrate*          identityref
          |        +--rw tx-channel-power?
          |        |       l0-types:power-dbm
          |        +--rw preferred-rx-channel-power?
          |        |       l0-types:power-dbm
          |        +--rw gsnr-extra-margin?            snr
          +--:(transit)
             +--rw regen-transceivers
                +--rw regen-group-id?         uint32
                +--rw incoming-transceiver
                |  +--rw transponder-id?   uint32
                |  +--rw transceivers* [transceiver-id]
                |     +--rw transceiver-id                uint32
                |     +--rw otsi-carrier-id?              uint16
                |     +--rw operational-modes*            string
                |     +--rw otsi-carrier-frequency?
                |     |       l0-types:frequency-thz
                |     +--rw tx-tune-constraints
                |     |  +--rw min-central-frequency?
                |     |  |       frequency-thz
                |     |  +--rw max-central-frequency?
                |     |  |       frequency-thz
                |     |  +--rw transceiver-tunability-granularity?
                |     |          frequency-ghz
                |     +--rw line-coding-bitrate*          identityref
                |     +--rw tx-channel-power?
                |     |       l0-types:power-dbm
                |     +--rw preferred-rx-channel-power?
                |     |       l0-types:power-dbm
                |     +--rw gsnr-extra-margin?            snr
                +--rw outgoing-transceiver
                   +--rw transponder-id?   uint32
                   +--rw transceivers* [transceiver-id]
                      +--rw transceiver-id                uint32
                      +--rw otsi-carrier-id?              uint16
                      +--rw operational-modes*            string
                      +--rw otsi-carrier-frequency?
                      |       l0-types:frequency-thz
                      +--rw tx-tune-constraints
                      |  +--rw min-central-frequency?
                      |  |       frequency-thz
                      |  +--rw max-central-frequency?
                      |  |       frequency-thz
                      |  +--rw transceiver-tunability-granularity?
                      |          frequency-ghz
                      +--rw line-coding-bitrate*          identityref
                      +--rw tx-channel-power?
                      |       l0-types:power-dbm
                      +--rw preferred-rx-channel-power?
                      |       l0-types:power-dbm
                      +--rw gsnr-extra-margin?            snr
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:primary-reverse-path
               /te:explicit-route-objects/te:route-object-exclude-always
               /te:type/te:numbered-node-hop/te:numbered-node-hop:
       +--rw (node-position)?
          +--:(source)
          |  +--rw source-transceiver
          |     +--rw transponder-id?   uint32
          |     +--rw transceivers* [transceiver-id]
          |        +--rw transceiver-id                uint32
          |        +--rw otsi-carrier-id?              uint16
          |        +--rw operational-modes*            string
          |        +--rw otsi-carrier-frequency?
          |        |       l0-types:frequency-thz
          |        +--rw tx-tune-constraints
          |        |  +--rw min-central-frequency?
          |        |  |       frequency-thz
          |        |  +--rw max-central-frequency?
          |        |  |       frequency-thz
          |        |  +--rw transceiver-tunability-granularity?
          |        |          frequency-ghz
          |        +--rw line-coding-bitrate*          identityref
          |        +--rw tx-channel-power?
          |        |       l0-types:power-dbm
          |        +--rw preferred-rx-channel-power?
          |        |       l0-types:power-dbm
          |        +--rw gsnr-extra-margin?            snr
          +--:(destination)
          |  +--rw destination-transceiver
          |     +--rw transponder-id?   uint32
          |     +--rw transceivers* [transceiver-id]
          |        +--rw transceiver-id                uint32
          |        +--rw otsi-carrier-id?              uint16
          |        +--rw operational-modes*            string
          |        +--rw otsi-carrier-frequency?
          |        |       l0-types:frequency-thz
          |        +--rw tx-tune-constraints
          |        |  +--rw min-central-frequency?
          |        |  |       frequency-thz
          |        |  +--rw max-central-frequency?
          |        |  |       frequency-thz
          |        |  +--rw transceiver-tunability-granularity?
          |        |          frequency-ghz
          |        +--rw line-coding-bitrate*          identityref
          |        +--rw tx-channel-power?
          |        |       l0-types:power-dbm
          |        +--rw preferred-rx-channel-power?
          |        |       l0-types:power-dbm
          |        +--rw gsnr-extra-margin?            snr
          +--:(transit)
             +--rw regen-transceivers
                +--rw regen-group-id?         uint32
                +--rw incoming-transceiver
                |  +--rw transponder-id?   uint32
                |  +--rw transceivers* [transceiver-id]
                |     +--rw transceiver-id                uint32
                |     +--rw otsi-carrier-id?              uint16
                |     +--rw operational-modes*            string
                |     +--rw otsi-carrier-frequency?
                |     |       l0-types:frequency-thz
                |     +--rw tx-tune-constraints
                |     |  +--rw min-central-frequency?
                |     |  |       frequency-thz
                |     |  +--rw max-central-frequency?
                |     |  |       frequency-thz
                |     |  +--rw transceiver-tunability-granularity?
                |     |          frequency-ghz
                |     +--rw line-coding-bitrate*          identityref
                |     +--rw tx-channel-power?
                |     |       l0-types:power-dbm
                |     +--rw preferred-rx-channel-power?
                |     |       l0-types:power-dbm
                |     +--rw gsnr-extra-margin?            snr
                +--rw outgoing-transceiver
                   +--rw transponder-id?   uint32
                   +--rw transceivers* [transceiver-id]
                      +--rw transceiver-id                uint32
                      +--rw otsi-carrier-id?              uint16
                      +--rw operational-modes*            string
                      +--rw otsi-carrier-frequency?
                      |       l0-types:frequency-thz
                      +--rw tx-tune-constraints
                      |  +--rw min-central-frequency?
                      |  |       frequency-thz
                      |  +--rw max-central-frequency?
                      |  |       frequency-thz
                      |  +--rw transceiver-tunability-granularity?
                      |          frequency-ghz
                      +--rw line-coding-bitrate*          identityref
                      +--rw tx-channel-power?
                      |       l0-types:power-dbm
                      +--rw preferred-rx-channel-power?
                      |       l0-types:power-dbm
                      +--rw gsnr-extra-margin?            snr
     augment /te:te/te:tunnels/te:tunnel/te:secondary-paths
               /te:secondary-path/te:explicit-route-objects
               /te:route-object-exclude-always/te:type
               /te:numbered-node-hop/te:numbered-node-hop:
       +--rw (node-position)?
          +--:(source)
          |  +--rw source-transceiver
          |     +--rw transponder-id?   uint32
          |     +--rw transceivers* [transceiver-id]
          |        +--rw transceiver-id                uint32
          |        +--rw otsi-carrier-id?              uint16
          |        +--rw operational-modes*            string
          |        +--rw otsi-carrier-frequency?
          |        |       l0-types:frequency-thz
          |        +--rw tx-tune-constraints
          |        |  +--rw min-central-frequency?
          |        |  |       frequency-thz
          |        |  +--rw max-central-frequency?
          |        |  |       frequency-thz
          |        |  +--rw transceiver-tunability-granularity?
          |        |          frequency-ghz
          |        +--rw line-coding-bitrate*          identityref
          |        +--rw tx-channel-power?
          |        |       l0-types:power-dbm
          |        +--rw preferred-rx-channel-power?
          |        |       l0-types:power-dbm
          |        +--rw gsnr-extra-margin?            snr
          +--:(destination)
          |  +--rw destination-transceiver
          |     +--rw transponder-id?   uint32
          |     +--rw transceivers* [transceiver-id]
          |        +--rw transceiver-id                uint32
          |        +--rw otsi-carrier-id?              uint16
          |        +--rw operational-modes*            string
          |        +--rw otsi-carrier-frequency?
          |        |       l0-types:frequency-thz
          |        +--rw tx-tune-constraints
          |        |  +--rw min-central-frequency?
          |        |  |       frequency-thz
          |        |  +--rw max-central-frequency?
          |        |  |       frequency-thz
          |        |  +--rw transceiver-tunability-granularity?
          |        |          frequency-ghz
          |        +--rw line-coding-bitrate*          identityref
          |        +--rw tx-channel-power?
          |        |       l0-types:power-dbm
          |        +--rw preferred-rx-channel-power?
          |        |       l0-types:power-dbm
          |        +--rw gsnr-extra-margin?            snr
          +--:(transit)
             +--rw regen-transceivers
                +--rw regen-group-id?         uint32
                +--rw incoming-transceiver
                |  +--rw transponder-id?   uint32
                |  +--rw transceivers* [transceiver-id]
                |     +--rw transceiver-id                uint32
                |     +--rw otsi-carrier-id?              uint16
                |     +--rw operational-modes*            string
                |     +--rw otsi-carrier-frequency?
                |     |       l0-types:frequency-thz
                |     +--rw tx-tune-constraints
                |     |  +--rw min-central-frequency?
                |     |  |       frequency-thz
                |     |  +--rw max-central-frequency?
                |     |  |       frequency-thz
                |     |  +--rw transceiver-tunability-granularity?
                |     |          frequency-ghz
                |     +--rw line-coding-bitrate*          identityref
                |     +--rw tx-channel-power?
                |     |       l0-types:power-dbm
                |     +--rw preferred-rx-channel-power?
                |     |       l0-types:power-dbm
                |     +--rw gsnr-extra-margin?            snr
                +--rw outgoing-transceiver
                   +--rw transponder-id?   uint32
                   +--rw transceivers* [transceiver-id]
                      +--rw transceiver-id                uint32
                      +--rw otsi-carrier-id?              uint16
                      +--rw operational-modes*            string
                      +--rw otsi-carrier-frequency?
                      |       l0-types:frequency-thz
                      +--rw tx-tune-constraints
                      |  +--rw min-central-frequency?
                      |  |       frequency-thz
                      |  +--rw max-central-frequency?
                      |  |       frequency-thz
                      |  +--rw transceiver-tunability-granularity?
                      |          frequency-ghz
                      +--rw line-coding-bitrate*          identityref
                      +--rw tx-channel-power?
                      |       l0-types:power-dbm
                      +--rw preferred-rx-channel-power?
                      |       l0-types:power-dbm
                      +--rw gsnr-extra-margin?            snr
     augment /te:te/te:tunnels/te:tunnel/te:secondary-reverse-paths
               /te:secondary-reverse-path/te:explicit-route-objects
               /te:route-object-exclude-always/te:type
               /te:numbered-node-hop/te:numbered-node-hop:
       +--rw (node-position)?
          +--:(source)
          |  +--rw source-transceiver
          |     +--rw transponder-id?   uint32
          |     +--rw transceivers* [transceiver-id]
          |        +--rw transceiver-id                uint32
          |        +--rw otsi-carrier-id?              uint16
          |        +--rw operational-modes*            string
          |        +--rw otsi-carrier-frequency?
          |        |       l0-types:frequency-thz
          |        +--rw tx-tune-constraints
          |        |  +--rw min-central-frequency?
          |        |  |       frequency-thz
          |        |  +--rw max-central-frequency?
          |        |  |       frequency-thz
          |        |  +--rw transceiver-tunability-granularity?
          |        |          frequency-ghz
          |        +--rw line-coding-bitrate*          identityref
          |        +--rw tx-channel-power?
          |        |       l0-types:power-dbm
          |        +--rw preferred-rx-channel-power?
          |        |       l0-types:power-dbm
          |        +--rw gsnr-extra-margin?            snr
          +--:(destination)
          |  +--rw destination-transceiver
          |     +--rw transponder-id?   uint32
          |     +--rw transceivers* [transceiver-id]
          |        +--rw transceiver-id                uint32
          |        +--rw otsi-carrier-id?              uint16
          |        +--rw operational-modes*            string
          |        +--rw otsi-carrier-frequency?
          |        |       l0-types:frequency-thz
          |        +--rw tx-tune-constraints
          |        |  +--rw min-central-frequency?
          |        |  |       frequency-thz
          |        |  +--rw max-central-frequency?
          |        |  |       frequency-thz
          |        |  +--rw transceiver-tunability-granularity?
          |        |          frequency-ghz
          |        +--rw line-coding-bitrate*          identityref
          |        +--rw tx-channel-power?
          |        |       l0-types:power-dbm
          |        +--rw preferred-rx-channel-power?
          |        |       l0-types:power-dbm
          |        +--rw gsnr-extra-margin?            snr
          +--:(transit)
             +--rw regen-transceivers
                +--rw regen-group-id?         uint32
                +--rw incoming-transceiver
                |  +--rw transponder-id?   uint32
                |  +--rw transceivers* [transceiver-id]
                |     +--rw transceiver-id                uint32
                |     +--rw otsi-carrier-id?              uint16
                |     +--rw operational-modes*            string
                |     +--rw otsi-carrier-frequency?
                |     |       l0-types:frequency-thz
                |     +--rw tx-tune-constraints
                |     |  +--rw min-central-frequency?
                |     |  |       frequency-thz
                |     |  +--rw max-central-frequency?
                |     |  |       frequency-thz
                |     |  +--rw transceiver-tunability-granularity?
                |     |          frequency-ghz
                |     +--rw line-coding-bitrate*          identityref
                |     +--rw tx-channel-power?
                |     |       l0-types:power-dbm
                |     +--rw preferred-rx-channel-power?
                |     |       l0-types:power-dbm
                |     +--rw gsnr-extra-margin?            snr
                +--rw outgoing-transceiver
                   +--rw transponder-id?   uint32
                   +--rw transceivers* [transceiver-id]
                      +--rw transceiver-id                uint32
                      +--rw otsi-carrier-id?              uint16
                      +--rw operational-modes*            string
                      +--rw otsi-carrier-frequency?
                      |       l0-types:frequency-thz
                      +--rw tx-tune-constraints
                      |  +--rw min-central-frequency?
                      |  |       frequency-thz
                      |  +--rw max-central-frequency?
                      |  |       frequency-thz
                      |  +--rw transceiver-tunability-granularity?
                      |          frequency-ghz
                      +--rw line-coding-bitrate*          identityref
                      +--rw tx-channel-power?
                      |       l0-types:power-dbm
                      +--rw preferred-rx-channel-power?
                      |       l0-types:power-dbm
                      +--rw gsnr-extra-margin?            snr
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:computed-paths-properties
               /te:computed-path-properties/te:path-properties
               /te:path-route-objects/te:path-route-object/te:type
               /te:numbered-node-hop/te:numbered-node-hop:
       +--ro (node-position)?
          +--:(source)
          |  +--ro source-transceiver
          |     +--ro transponder-id?   uint32
          |     +--ro transceivers* [transceiver-id]
          |        +--ro otsi-carrier-id?          uint16
          |        +--ro transceiver-id            uint32
          |        +--ro otsi-carrier-frequency?   union
          |        +--ro rx-channel-power?         power-dbm-or-null
          |        +--ro rx-total-power?           power-dbm-or-null
          |        +--ro estimated-gsnr?           snr
          |        +--ro estimated-eol-gsnr?       snr
          |        +--ro estimated-lowest-gsnr?    snr
          +--:(destination)
          |  +--ro destination-transceiver
          |     +--ro transponder-id?   uint32
          |     +--ro transceivers* [transceiver-id]
          |        +--ro otsi-carrier-id?          uint16
          |        +--ro transceiver-id            uint32
          |        +--ro otsi-carrier-frequency?   union
          |        +--ro rx-channel-power?         power-dbm-or-null
          |        +--ro rx-total-power?           power-dbm-or-null
          |        +--ro estimated-gsnr?           snr
          |        +--ro estimated-eol-gsnr?       snr
          |        +--ro estimated-lowest-gsnr?    snr
          +--:(transit)
             +--ro regen-transceivers
                +--ro regen-group-id?         uint32
                +--ro incoming-transceiver
                |  +--ro transponder-id?   uint32
                |  +--ro transceivers* [transceiver-id]
                |     +--ro otsi-carrier-id?          uint16
                |     +--ro transceiver-id            uint32
                |     +--ro otsi-carrier-frequency?   union
                |     +--ro rx-channel-power?         power-dbm-or-null
                |     +--ro rx-total-power?           power-dbm-or-null
                |     +--ro estimated-gsnr?           snr
                |     +--ro estimated-eol-gsnr?       snr
                |     +--ro estimated-lowest-gsnr?    snr
                +--ro outgoing-transceiver
                   +--ro transponder-id?   uint32
                   +--ro transceivers* [transceiver-id]
                      +--ro otsi-carrier-id?          uint16
                      +--ro transceiver-id            uint32
                      +--ro otsi-carrier-frequency?   union
                      +--ro rx-channel-power?         power-dbm-or-null
                      +--ro rx-total-power?           power-dbm-or-null
                      +--ro estimated-gsnr?           snr
                      +--ro estimated-eol-gsnr?       snr
                      +--ro estimated-lowest-gsnr?    snr
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:primary-reverse-path
               /te:computed-paths-properties/te:computed-path-properties
               /te:path-properties/te:path-route-objects
               /te:path-route-object/te:type/te:numbered-node-hop
               /te:numbered-node-hop:
       +--ro (node-position)?
          +--:(source)
          |  +--ro source-transceiver
          |     +--ro transponder-id?   uint32
          |     +--ro transceivers* [transceiver-id]
          |        +--ro otsi-carrier-id?          uint16
          |        +--ro transceiver-id            uint32
          |        +--ro otsi-carrier-frequency?   union
          |        +--ro rx-channel-power?         power-dbm-or-null
          |        +--ro rx-total-power?           power-dbm-or-null
          |        +--ro estimated-gsnr?           snr
          |        +--ro estimated-eol-gsnr?       snr
          |        +--ro estimated-lowest-gsnr?    snr
          +--:(destination)
          |  +--ro destination-transceiver
          |     +--ro transponder-id?   uint32
          |     +--ro transceivers* [transceiver-id]
          |        +--ro otsi-carrier-id?          uint16
          |        +--ro transceiver-id            uint32
          |        +--ro otsi-carrier-frequency?   union
          |        +--ro rx-channel-power?         power-dbm-or-null
          |        +--ro rx-total-power?           power-dbm-or-null
          |        +--ro estimated-gsnr?           snr
          |        +--ro estimated-eol-gsnr?       snr
          |        +--ro estimated-lowest-gsnr?    snr
          +--:(transit)
             +--ro regen-transceivers
                +--ro regen-group-id?         uint32
                +--ro incoming-transceiver
                |  +--ro transponder-id?   uint32
                |  +--ro transceivers* [transceiver-id]
                |     +--ro otsi-carrier-id?          uint16
                |     +--ro transceiver-id            uint32
                |     +--ro otsi-carrier-frequency?   union
                |     +--ro rx-channel-power?         power-dbm-or-null
                |     +--ro rx-total-power?           power-dbm-or-null
                |     +--ro estimated-gsnr?           snr
                |     +--ro estimated-eol-gsnr?       snr
                |     +--ro estimated-lowest-gsnr?    snr
                +--ro outgoing-transceiver
                   +--ro transponder-id?   uint32
                   +--ro transceivers* [transceiver-id]
                      +--ro otsi-carrier-id?          uint16
                      +--ro transceiver-id            uint32
                      +--ro otsi-carrier-frequency?   union
                      +--ro rx-channel-power?         power-dbm-or-null
                      +--ro rx-total-power?           power-dbm-or-null
                      +--ro estimated-gsnr?           snr
                      +--ro estimated-eol-gsnr?       snr
                      +--ro estimated-lowest-gsnr?    snr
     augment /te:te/te:tunnels/te:tunnel/te:secondary-paths
               /te:secondary-path/te:computed-paths-properties
               /te:computed-path-properties/te:path-properties
               /te:path-route-objects/te:path-route-object/te:type
               /te:numbered-node-hop/te:numbered-node-hop:
       +--ro (node-position)?
          +--:(source)
          |  +--ro source-transceiver
          |     +--ro transponder-id?   uint32
          |     +--ro transceivers* [transceiver-id]
          |        +--ro otsi-carrier-id?          uint16
          |        +--ro transceiver-id            uint32
          |        +--ro otsi-carrier-frequency?   union
          |        +--ro rx-channel-power?         power-dbm-or-null
          |        +--ro rx-total-power?           power-dbm-or-null
          |        +--ro estimated-gsnr?           snr
          |        +--ro estimated-eol-gsnr?       snr
          |        +--ro estimated-lowest-gsnr?    snr
          +--:(destination)
          |  +--ro destination-transceiver
          |     +--ro transponder-id?   uint32
          |     +--ro transceivers* [transceiver-id]
          |        +--ro otsi-carrier-id?          uint16
          |        +--ro transceiver-id            uint32
          |        +--ro otsi-carrier-frequency?   union
          |        +--ro rx-channel-power?         power-dbm-or-null
          |        +--ro rx-total-power?           power-dbm-or-null
          |        +--ro estimated-gsnr?           snr
          |        +--ro estimated-eol-gsnr?       snr
          |        +--ro estimated-lowest-gsnr?    snr
          +--:(transit)
             +--ro regen-transceivers
                +--ro regen-group-id?         uint32
                +--ro incoming-transceiver
                |  +--ro transponder-id?   uint32
                |  +--ro transceivers* [transceiver-id]
                |     +--ro otsi-carrier-id?          uint16
                |     +--ro transceiver-id            uint32
                |     +--ro otsi-carrier-frequency?   union
                |     +--ro rx-channel-power?         power-dbm-or-null
                |     +--ro rx-total-power?           power-dbm-or-null
                |     +--ro estimated-gsnr?           snr
                |     +--ro estimated-eol-gsnr?       snr
                |     +--ro estimated-lowest-gsnr?    snr
                +--ro outgoing-transceiver
                   +--ro transponder-id?   uint32
                   +--ro transceivers* [transceiver-id]
                      +--ro otsi-carrier-id?          uint16
                      +--ro transceiver-id            uint32
                      +--ro otsi-carrier-frequency?   union
                      +--ro rx-channel-power?         power-dbm-or-null
                      +--ro rx-total-power?           power-dbm-or-null
                      +--ro estimated-gsnr?           snr
                      +--ro estimated-eol-gsnr?       snr
                      +--ro estimated-lowest-gsnr?    snr
     augment /te:te/te:tunnels/te:tunnel/te:secondary-reverse-paths
               /te:secondary-reverse-path/te:computed-paths-properties
               /te:computed-path-properties/te:path-properties
               /te:path-route-objects/te:path-route-object/te:type
               /te:numbered-node-hop/te:numbered-node-hop:
       +--ro (node-position)?
          +--:(source)
          |  +--ro source-transceiver
          |     +--ro transponder-id?   uint32
          |     +--ro transceivers* [transceiver-id]
          |        +--ro otsi-carrier-id?          uint16
          |        +--ro transceiver-id            uint32
          |        +--ro otsi-carrier-frequency?   union
          |        +--ro rx-channel-power?         power-dbm-or-null
          |        +--ro rx-total-power?           power-dbm-or-null
          |        +--ro estimated-gsnr?           snr
          |        +--ro estimated-eol-gsnr?       snr
          |        +--ro estimated-lowest-gsnr?    snr
          +--:(destination)
          |  +--ro destination-transceiver
          |     +--ro transponder-id?   uint32
          |     +--ro transceivers* [transceiver-id]
          |        +--ro otsi-carrier-id?          uint16
          |        +--ro transceiver-id            uint32
          |        +--ro otsi-carrier-frequency?   union
          |        +--ro rx-channel-power?         power-dbm-or-null
          |        +--ro rx-total-power?           power-dbm-or-null
          |        +--ro estimated-gsnr?           snr
          |        +--ro estimated-eol-gsnr?       snr
          |        +--ro estimated-lowest-gsnr?    snr
          +--:(transit)
             +--ro regen-transceivers
                +--ro regen-group-id?         uint32
                +--ro incoming-transceiver
                |  +--ro transponder-id?   uint32
                |  +--ro transceivers* [transceiver-id]
                |     +--ro otsi-carrier-id?          uint16
                |     +--ro transceiver-id            uint32
                |     +--ro otsi-carrier-frequency?   union
                |     +--ro rx-channel-power?         power-dbm-or-null
                |     +--ro rx-total-power?           power-dbm-or-null
                |     +--ro estimated-gsnr?           snr
                |     +--ro estimated-eol-gsnr?       snr
                |     +--ro estimated-lowest-gsnr?    snr
                +--ro outgoing-transceiver
                   +--ro transponder-id?   uint32
                   +--ro transceivers* [transceiver-id]
                      +--ro otsi-carrier-id?          uint16
                      +--ro transceiver-id            uint32
                      +--ro otsi-carrier-frequency?   union
                      +--ro rx-channel-power?         power-dbm-or-null
                      +--ro rx-total-power?           power-dbm-or-null
                      +--ro estimated-gsnr?           snr
                      +--ro estimated-eol-gsnr?       snr
                      +--ro estimated-lowest-gsnr?    snr
     augment /te:te/te:lsps/te:lsp/te:lsp-actual-route-information
               /te:lsp-actual-route-information/te:type
               /te:numbered-node-hop/te:numbered-node-hop:
       +--ro (node-position)?
          +--:(source)
          |  +--ro source-transceiver
          |     +--ro transponder-id?   uint32
          |     +--ro transceivers* [transceiver-id]
          |        +--ro otsi-carrier-id?          uint16
          |        +--ro transceiver-id            uint32
          |        +--ro otsi-carrier-frequency?   union
          |        +--ro rx-channel-power?         power-dbm-or-null
          |        +--ro rx-total-power?           power-dbm-or-null
          |        +--ro pre-fec-ber
          |        |  +--ro timestamp?   yang:timestamp
          |        |  +--ro value?       decimal64
          |        +--ro q-factor
          |           +--ro timestamp?   yang:timestamp
          |           +--ro value?       l0-types:decimal-2-or-null
          +--:(destination)
          |  +--ro destination-transceiver
          |     +--ro transponder-id?   uint32
          |     +--ro transceivers* [transceiver-id]
          |        +--ro otsi-carrier-id?          uint16
          |        +--ro transceiver-id            uint32
          |        +--ro otsi-carrier-frequency?   union
          |        +--ro rx-channel-power?         power-dbm-or-null
          |        +--ro rx-total-power?           power-dbm-or-null
          |        +--ro pre-fec-ber
          |        |  +--ro timestamp?   yang:timestamp
          |        |  +--ro value?       decimal64
          |        +--ro q-factor
          |           +--ro timestamp?   yang:timestamp
          |           +--ro value?       l0-types:decimal-2-or-null
          +--:(transit)
             +--ro regen-transceivers
                +--ro regen-group-id?         uint32
                +--ro incoming-transceiver
                |  +--ro transponder-id?   uint32
                |  +--ro transceivers* [transceiver-id]
                |     +--ro otsi-carrier-id?          uint16
                |     +--ro transceiver-id            uint32
                |     +--ro otsi-carrier-frequency?   union
                |     +--ro rx-channel-power?         power-dbm-or-null
                |     +--ro rx-total-power?           power-dbm-or-null
                |     +--ro pre-fec-ber
                |     |  +--ro timestamp?   yang:timestamp
                |     |  +--ro value?       decimal64
                |     +--ro q-factor
                |        +--ro timestamp?   yang:timestamp
                |        +--ro value?       l0-types:decimal-2-or-null
                +--ro outgoing-transceiver
                   +--ro transponder-id?   uint32
                   +--ro transceivers* [transceiver-id]
                      +--ro otsi-carrier-id?          uint16
                      +--ro transceiver-id            uint32
                      +--ro otsi-carrier-frequency?   union
                      +--ro rx-channel-power?         power-dbm-or-null
                      +--ro rx-total-power?           power-dbm-or-null
                      +--ro pre-fec-ber
                      |  +--ro timestamp?   yang:timestamp
                      |  +--ro value?       decimal64
                      +--ro q-factor
                         +--ro timestamp?   yang:timestamp
                         +--ro value?       l0-types:decimal-2-or-null
     augment /te:te/te:lsps/te:lsp/te:lsp-actual-route-information
               /te:lsp-actual-route-information/te:type
               /te:numbered-link-hop/te:numbered-link-hop:
       +--ro e2e-mc-path-id*   uint16
     augment /te:te/te:lsps/te:lsp/te:lsp-actual-route-information
               /te:lsp-actual-route-information/te:type
               /te:unnumbered-link-hop/te:unnumbered-link-hop:
       +--ro e2e-mc-path-id*   uint16
     augment /te:te/te:globals/te:named-path-constraints
               /te:named-path-constraint/te:path-in-segment
               /te:label-restrictions/te:label-restriction:
       +--rw grid-type?    identityref
       +--rw priority?     uint8
       +--rw flexi-grid
          +--rw slot-width-granularity?   identityref
          +--rw min-slot-width-factor?    uint16
          +--rw max-slot-width-factor?    uint16
     augment /te:te/te:globals/te:named-path-constraints
               /te:named-path-constraint/te:path-out-segment
               /te:label-restrictions/te:label-restriction:
       +--rw grid-type?    identityref
       +--rw priority?     uint8
       +--rw flexi-grid
          +--rw slot-width-granularity?   identityref
          +--rw min-slot-width-factor?    uint16
          +--rw max-slot-width-factor?    uint16
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:path-in-segment/te:label-restrictions
               /te:label-restriction:
       +--rw grid-type?    identityref
       +--rw priority?     uint8
       +--rw flexi-grid
          +--rw slot-width-granularity?   identityref
          +--rw min-slot-width-factor?    uint16
          +--rw max-slot-width-factor?    uint16
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:path-out-segment
               /te:label-restrictions/te:label-restriction:
       +--rw grid-type?    identityref
       +--rw priority?     uint8
       +--rw flexi-grid
          +--rw slot-width-granularity?   identityref
          +--rw min-slot-width-factor?    uint16
          +--rw max-slot-width-factor?    uint16
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:primary-reverse-path
               /te:path-in-segment/te:label-restrictions
               /te:label-restriction:
       +--rw grid-type?    identityref
       +--rw priority?     uint8
       +--rw flexi-grid
          +--rw slot-width-granularity?   identityref
          +--rw min-slot-width-factor?    uint16
          +--rw max-slot-width-factor?    uint16
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:primary-reverse-path
               /te:path-out-segment/te:label-restrictions
               /te:label-restriction:
       +--rw grid-type?    identityref
       +--rw priority?     uint8
       +--rw flexi-grid
          +--rw slot-width-granularity?   identityref
          +--rw min-slot-width-factor?    uint16
          +--rw max-slot-width-factor?    uint16
     augment /te:te/te:tunnels/te:tunnel/te:secondary-paths
               /te:secondary-path/te:path-in-segment
               /te:label-restrictions/te:label-restriction:
       +--rw grid-type?    identityref
       +--rw priority?     uint8
       +--rw flexi-grid
          +--rw slot-width-granularity?   identityref
          +--rw min-slot-width-factor?    uint16
          +--rw max-slot-width-factor?    uint16
     augment /te:te/te:tunnels/te:tunnel/te:secondary-paths
               /te:secondary-path/te:path-out-segment
               /te:label-restrictions/te:label-restriction:
       +--rw grid-type?    identityref
       +--rw priority?     uint8
       +--rw flexi-grid
          +--rw slot-width-granularity?   identityref
          +--rw min-slot-width-factor?    uint16
          +--rw max-slot-width-factor?    uint16
     augment /te:te/te:tunnels/te:tunnel/te:secondary-reverse-paths
               /te:secondary-reverse-path/te:path-in-segment
               /te:label-restrictions/te:label-restriction:
       +--rw grid-type?    identityref
       +--rw priority?     uint8
       +--rw flexi-grid
          +--rw slot-width-granularity?   identityref
          +--rw min-slot-width-factor?    uint16
          +--rw max-slot-width-factor?    uint16
     augment /te:te/te:tunnels/te:tunnel/te:secondary-reverse-paths
               /te:secondary-reverse-path/te:path-out-segment
               /te:label-restrictions/te:label-restriction:
       +--rw grid-type?    identityref
       +--rw priority?     uint8
       +--rw flexi-grid
          +--rw slot-width-granularity?   identityref
          +--rw min-slot-width-factor?    uint16
          +--rw max-slot-width-factor?    uint16
     augment /te:te/te:globals/te:named-path-constraints
               /te:named-path-constraint/te:explicit-route-objects
               /te:route-object-exclude-always/te:type/te:label
               /te:label-hop/te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw (fixed-single-or-super-channel)?
             |     +--:(single)
             |     |  +--rw dwdm-n?               l0-types:dwdm-n
             |     +--:(multi)
             |        +--rw subcarrier-dwdm-n*    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?                     l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw (single-or-super-channel)?
                   +--:(single)
                   |  +--rw flexi-n?              l0-types:flexi-n
                   |  +--rw flexi-m?              l0-types:flexi-m
                   x--:(super)
                   |  x--rw subcarrier-flexi-n* [flexi-n]
                   |     +--rw flexi-n    l0-types:flexi-n
                   |     +--rw flexi-m?   l0-types:flexi-m
                   +--:(multi)
                      +--rw frequency-slots
                         +--rw frequency-slot* [flexi-n]
                            +--rw flexi-n    l0-types:flexi-n
                            +--rw flexi-m?   l0-types:flexi-m
     augment /te:te/te:globals/te:named-path-constraints
               /te:named-path-constraint/te:explicit-route-objects
               /te:route-object-include-exclude/te:type/te:label
               /te:label-hop/te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw (fixed-single-or-super-channel)?
             |     +--:(single)
             |     |  +--rw dwdm-n?               l0-types:dwdm-n
             |     +--:(multi)
             |        +--rw subcarrier-dwdm-n*    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?                     l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw (single-or-super-channel)?
                   +--:(single)
                   |  +--rw flexi-n?              l0-types:flexi-n
                   |  +--rw flexi-m?              l0-types:flexi-m
                   x--:(super)
                   |  x--rw subcarrier-flexi-n* [flexi-n]
                   |     +--rw flexi-n    l0-types:flexi-n
                   |     +--rw flexi-m?   l0-types:flexi-m
                   +--:(multi)
                      +--rw frequency-slots
                         +--rw frequency-slot* [flexi-n]
                            +--rw flexi-n    l0-types:flexi-n
                            +--rw flexi-m?   l0-types:flexi-m
     augment /te:te/te:globals/te:named-path-constraints
               /te:named-path-constraint/te:path-in-segment
               /te:label-restrictions/te:label-restriction
               /te:label-start/te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw dwdm-n?    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?    l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw flexi-n?   l0-types:flexi-n
     augment /te:te/te:globals/te:named-path-constraints
               /te:named-path-constraint/te:path-in-segment
               /te:label-restrictions/te:label-restriction/te:label-end
               /te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw dwdm-n?    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?    l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw flexi-n?   l0-types:flexi-n
     augment /te:te/te:globals/te:named-path-constraints
               /te:named-path-constraint/te:path-in-segment
               /te:label-restrictions/te:label-restriction/te:label-step
               /te:technology:
       +--:(wdm)
          +--rw (l0-grid-type)?
             +--:(fixed-dwdm)
             |  +--rw wson-dwdm-channel-spacing?    identityref
             +--:(cwdm)
             |  +--rw wson-cwdm-channel-spacing?    identityref
             +--:(flexi-grid)
                x--rw flexi-grid-channel-spacing?   identityref
                +--rw flexi-ncfg?                   identityref
                +--rw flexi-n-step?                 uint8
     augment /te:te/te:globals/te:named-path-constraints
               /te:named-path-constraint/te:path-out-segment
               /te:label-restrictions/te:label-restriction
               /te:label-start/te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw dwdm-n?    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?    l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw flexi-n?   l0-types:flexi-n
     augment /te:te/te:globals/te:named-path-constraints
               /te:named-path-constraint/te:path-out-segment
               /te:label-restrictions/te:label-restriction/te:label-end
               /te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw dwdm-n?    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?    l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw flexi-n?   l0-types:flexi-n
     augment /te:te/te:globals/te:named-path-constraints
               /te:named-path-constraint/te:path-out-segment
               /te:label-restrictions/te:label-restriction/te:label-step
               /te:technology:
       +--:(wdm)
          +--rw (l0-grid-type)?
             +--:(fixed-dwdm)
             |  +--rw wson-dwdm-channel-spacing?    identityref
             +--:(cwdm)
             |  +--rw wson-cwdm-channel-spacing?    identityref
             +--:(flexi-grid)
                x--rw flexi-grid-channel-spacing?   identityref
                +--rw flexi-ncfg?                   identityref
                +--rw flexi-n-step?                 uint8
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:optimizations/te:algorithm/te:metric
               /te:optimization-metric/te:explicit-route-exclude-objects
               /te:route-object-exclude-object/te:type/te:label
               /te:label-hop/te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw (fixed-single-or-super-channel)?
             |     +--:(single)
             |     |  +--rw dwdm-n?               l0-types:dwdm-n
             |     +--:(multi)
             |        +--rw subcarrier-dwdm-n*    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?                     l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw (single-or-super-channel)?
                   +--:(single)
                   |  +--rw flexi-n?              l0-types:flexi-n
                   |  +--rw flexi-m?              l0-types:flexi-m
                   x--:(super)
                   |  x--rw subcarrier-flexi-n* [flexi-n]
                   |     +--rw flexi-n    l0-types:flexi-n
                   |     +--rw flexi-m?   l0-types:flexi-m
                   +--:(multi)
                      +--rw frequency-slots
                         +--rw frequency-slot* [flexi-n]
                            +--rw flexi-n    l0-types:flexi-n
                            +--rw flexi-m?   l0-types:flexi-m
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:optimizations/te:algorithm/te:metric
               /te:optimization-metric/te:explicit-route-include-objects
               /te:route-object-include-object/te:type/te:label
               /te:label-hop/te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw (fixed-single-or-super-channel)?
             |     +--:(single)
             |     |  +--rw dwdm-n?               l0-types:dwdm-n
             |     +--:(multi)
             |        +--rw subcarrier-dwdm-n*    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?                     l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw (single-or-super-channel)?
                   +--:(single)
                   |  +--rw flexi-n?              l0-types:flexi-n
                   |  +--rw flexi-m?              l0-types:flexi-m
                   x--:(super)
                   |  x--rw subcarrier-flexi-n* [flexi-n]
                   |     +--rw flexi-n    l0-types:flexi-n
                   |     +--rw flexi-m?   l0-types:flexi-m
                   +--:(multi)
                      +--rw frequency-slots
                         +--rw frequency-slot* [flexi-n]
                            +--rw flexi-n    l0-types:flexi-n
                            +--rw flexi-m?   l0-types:flexi-m
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:explicit-route-objects
               /te:route-object-exclude-always/te:type/te:label
               /te:label-hop/te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw (fixed-single-or-super-channel)?
             |     +--:(single)
             |     |  +--rw dwdm-n?               l0-types:dwdm-n
             |     +--:(multi)
             |        +--rw subcarrier-dwdm-n*    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?                     l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw (single-or-super-channel)?
                   +--:(single)
                   |  +--rw flexi-n?              l0-types:flexi-n
                   |  +--rw flexi-m?              l0-types:flexi-m
                   x--:(super)
                   |  x--rw subcarrier-flexi-n* [flexi-n]
                   |     +--rw flexi-n    l0-types:flexi-n
                   |     +--rw flexi-m?   l0-types:flexi-m
                   +--:(multi)
                      +--rw frequency-slots
                         +--rw frequency-slot* [flexi-n]
                            +--rw flexi-n    l0-types:flexi-n
                            +--rw flexi-m?   l0-types:flexi-m
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:explicit-route-objects
               /te:route-object-include-exclude/te:type/te:label
               /te:label-hop/te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw (fixed-single-or-super-channel)?
             |     +--:(single)
             |     |  +--rw dwdm-n?               l0-types:dwdm-n
             |     +--:(multi)
             |        +--rw subcarrier-dwdm-n*    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?                     l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw (single-or-super-channel)?
                   +--:(single)
                   |  +--rw flexi-n?              l0-types:flexi-n
                   |  +--rw flexi-m?              l0-types:flexi-m
                   x--:(super)
                   |  x--rw subcarrier-flexi-n* [flexi-n]
                   |     +--rw flexi-n    l0-types:flexi-n
                   |     +--rw flexi-m?   l0-types:flexi-m
                   +--:(multi)
                      +--rw frequency-slots
                         +--rw frequency-slot* [flexi-n]
                            +--rw flexi-n    l0-types:flexi-n
                            +--rw flexi-m?   l0-types:flexi-m
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:path-in-segment/te:label-restrictions
               /te:label-restriction/te:label-start/te:te-label
               /te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw dwdm-n?    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?    l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw flexi-n?   l0-types:flexi-n
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:path-in-segment/te:label-restrictions
               /te:label-restriction/te:label-end/te:te-label
               /te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw dwdm-n?    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?    l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw flexi-n?   l0-types:flexi-n
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:path-in-segment/te:label-restrictions
               /te:label-restriction/te:label-step/te:technology:
       +--:(wdm)
          +--rw (l0-grid-type)?
             +--:(fixed-dwdm)
             |  +--rw wson-dwdm-channel-spacing?    identityref
             +--:(cwdm)
             |  +--rw wson-cwdm-channel-spacing?    identityref
             +--:(flexi-grid)
                x--rw flexi-grid-channel-spacing?   identityref
                +--rw flexi-ncfg?                   identityref
                +--rw flexi-n-step?                 uint8
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:path-out-segment
               /te:label-restrictions/te:label-restriction
               /te:label-start/te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw dwdm-n?    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?    l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw flexi-n?   l0-types:flexi-n
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:path-out-segment
               /te:label-restrictions/te:label-restriction/te:label-end
               /te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw dwdm-n?    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?    l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw flexi-n?   l0-types:flexi-n
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:path-out-segment
               /te:label-restrictions/te:label-restriction/te:label-step
               /te:technology:
       +--:(wdm)
          +--rw (l0-grid-type)?
             +--:(fixed-dwdm)
             |  +--rw wson-dwdm-channel-spacing?    identityref
             +--:(cwdm)
             |  +--rw wson-cwdm-channel-spacing?    identityref
             +--:(flexi-grid)
                x--rw flexi-grid-channel-spacing?   identityref
                +--rw flexi-ncfg?                   identityref
                +--rw flexi-n-step?                 uint8
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:computed-paths-properties
               /te:computed-path-properties/te:path-properties
               /te:path-route-objects/te:path-route-object/te:type
               /te:label/te:label-hop/te:te-label/te:technology:
       +--:(wdm)
          +--ro (grid-type)?
             +--:(fixed-dwdm)
             |  +--ro (fixed-single-or-super-channel)?
             |     +--:(single)
             |     |  +--ro dwdm-n?               l0-types:dwdm-n
             |     +--:(multi)
             |        +--ro subcarrier-dwdm-n*    l0-types:dwdm-n
             +--:(cwdm)
             |  +--ro cwdm-n?                     l0-types:cwdm-n
             +--:(flexi-grid)
                +--ro (single-or-super-channel)?
                   +--:(single)
                   |  +--ro flexi-n?              l0-types:flexi-n
                   |  +--ro flexi-m?              l0-types:flexi-m
                   x--:(super)
                   |  x--ro subcarrier-flexi-n* [flexi-n]
                   |     +--ro flexi-n    l0-types:flexi-n
                   |     +--ro flexi-m?   l0-types:flexi-m
                   +--:(multi)
                      +--ro frequency-slots
                         +--ro frequency-slot* [flexi-n]
                            +--ro flexi-n    l0-types:flexi-n
                            +--ro flexi-m?   l0-types:flexi-m
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:primary-reverse-path/te:optimizations
               /te:algorithm/te:metric/te:optimization-metric
               /te:explicit-route-exclude-objects
               /te:route-object-exclude-object/te:type/te:label
               /te:label-hop/te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw (fixed-single-or-super-channel)?
             |     +--:(single)
             |     |  +--rw dwdm-n?               l0-types:dwdm-n
             |     +--:(multi)
             |        +--rw subcarrier-dwdm-n*    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?                     l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw (single-or-super-channel)?
                   +--:(single)
                   |  +--rw flexi-n?              l0-types:flexi-n
                   |  +--rw flexi-m?              l0-types:flexi-m
                   x--:(super)
                   |  x--rw subcarrier-flexi-n* [flexi-n]
                   |     +--rw flexi-n    l0-types:flexi-n
                   |     +--rw flexi-m?   l0-types:flexi-m
                   +--:(multi)
                      +--rw frequency-slots
                         +--rw frequency-slot* [flexi-n]
                            +--rw flexi-n    l0-types:flexi-n
                            +--rw flexi-m?   l0-types:flexi-m
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:primary-reverse-path/te:optimizations
               /te:algorithm/te:metric/te:optimization-metric
               /te:explicit-route-include-objects
               /te:route-object-include-object/te:type/te:label
               /te:label-hop/te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw (fixed-single-or-super-channel)?
             |     +--:(single)
             |     |  +--rw dwdm-n?               l0-types:dwdm-n
             |     +--:(multi)
             |        +--rw subcarrier-dwdm-n*    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?                     l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw (single-or-super-channel)?
                   +--:(single)
                   |  +--rw flexi-n?              l0-types:flexi-n
                   |  +--rw flexi-m?              l0-types:flexi-m
                   x--:(super)
                   |  x--rw subcarrier-flexi-n* [flexi-n]
                   |     +--rw flexi-n    l0-types:flexi-n
                   |     +--rw flexi-m?   l0-types:flexi-m
                   +--:(multi)
                      +--rw frequency-slots
                         +--rw frequency-slot* [flexi-n]
                            +--rw flexi-n    l0-types:flexi-n
                            +--rw flexi-m?   l0-types:flexi-m
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:primary-reverse-path
               /te:explicit-route-objects/te:route-object-exclude-always
               /te:type/te:label/te:label-hop/te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw (fixed-single-or-super-channel)?
             |     +--:(single)
             |     |  +--rw dwdm-n?               l0-types:dwdm-n
             |     +--:(multi)
             |        +--rw subcarrier-dwdm-n*    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?                     l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw (single-or-super-channel)?
                   +--:(single)
                   |  +--rw flexi-n?              l0-types:flexi-n
                   |  +--rw flexi-m?              l0-types:flexi-m
                   x--:(super)
                   |  x--rw subcarrier-flexi-n* [flexi-n]
                   |     +--rw flexi-n    l0-types:flexi-n
                   |     +--rw flexi-m?   l0-types:flexi-m
                   +--:(multi)
                      +--rw frequency-slots
                         +--rw frequency-slot* [flexi-n]
                            +--rw flexi-n    l0-types:flexi-n
                            +--rw flexi-m?   l0-types:flexi-m
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:primary-reverse-path
               /te:explicit-route-objects
               /te:route-object-include-exclude/te:type/te:label
               /te:label-hop/te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw (fixed-single-or-super-channel)?
             |     +--:(single)
             |     |  +--rw dwdm-n?               l0-types:dwdm-n
             |     +--:(multi)
             |        +--rw subcarrier-dwdm-n*    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?                     l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw (single-or-super-channel)?
                   +--:(single)
                   |  +--rw flexi-n?              l0-types:flexi-n
                   |  +--rw flexi-m?              l0-types:flexi-m
                   x--:(super)
                   |  x--rw subcarrier-flexi-n* [flexi-n]
                   |     +--rw flexi-n    l0-types:flexi-n
                   |     +--rw flexi-m?   l0-types:flexi-m
                   +--:(multi)
                      +--rw frequency-slots
                         +--rw frequency-slot* [flexi-n]
                            +--rw flexi-n    l0-types:flexi-n
                            +--rw flexi-m?   l0-types:flexi-m
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:primary-reverse-path
               /te:path-in-segment/te:label-restrictions
               /te:label-restriction/te:label-start/te:te-label
               /te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw dwdm-n?    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?    l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw flexi-n?   l0-types:flexi-n
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:primary-reverse-path
               /te:path-in-segment/te:label-restrictions
               /te:label-restriction/te:label-end/te:te-label
               /te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw dwdm-n?    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?    l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw flexi-n?   l0-types:flexi-n
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:primary-reverse-path
               /te:path-in-segment/te:label-restrictions
               /te:label-restriction/te:label-step/te:technology:
       +--:(wdm)
          +--rw (l0-grid-type)?
             +--:(fixed-dwdm)
             |  +--rw wson-dwdm-channel-spacing?    identityref
             +--:(cwdm)
             |  +--rw wson-cwdm-channel-spacing?    identityref
             +--:(flexi-grid)
                x--rw flexi-grid-channel-spacing?   identityref
                +--rw flexi-ncfg?                   identityref
                +--rw flexi-n-step?                 uint8
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:primary-reverse-path
               /te:path-out-segment/te:label-restrictions
               /te:label-restriction/te:label-start/te:te-label
               /te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw dwdm-n?    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?    l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw flexi-n?   l0-types:flexi-n
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:primary-reverse-path
               /te:path-out-segment/te:label-restrictions
               /te:label-restriction/te:label-end/te:te-label
               /te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw dwdm-n?    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?    l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw flexi-n?   l0-types:flexi-n
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:primary-reverse-path
               /te:path-out-segment/te:label-restrictions
               /te:label-restriction/te:label-step/te:technology:
       +--:(wdm)
          +--rw (l0-grid-type)?
             +--:(fixed-dwdm)
             |  +--rw wson-dwdm-channel-spacing?    identityref
             +--:(cwdm)
             |  +--rw wson-cwdm-channel-spacing?    identityref
             +--:(flexi-grid)
                x--rw flexi-grid-channel-spacing?   identityref
                +--rw flexi-ncfg?                   identityref
                +--rw flexi-n-step?                 uint8
     augment /te:te/te:tunnels/te:tunnel/te:primary-paths
               /te:primary-path/te:primary-reverse-path
               /te:computed-paths-properties/te:computed-path-properties
               /te:path-properties/te:path-route-objects
               /te:path-route-object/te:type/te:label/te:label-hop
               /te:te-label/te:technology:
       +--:(wdm)
          +--ro (grid-type)?
             +--:(fixed-dwdm)
             |  +--ro (fixed-single-or-super-channel)?
             |     +--:(single)
             |     |  +--ro dwdm-n?               l0-types:dwdm-n
             |     +--:(multi)
             |        +--ro subcarrier-dwdm-n*    l0-types:dwdm-n
             +--:(cwdm)
             |  +--ro cwdm-n?                     l0-types:cwdm-n
             +--:(flexi-grid)
                +--ro (single-or-super-channel)?
                   +--:(single)
                   |  +--ro flexi-n?              l0-types:flexi-n
                   |  +--ro flexi-m?              l0-types:flexi-m
                   x--:(super)
                   |  x--ro subcarrier-flexi-n* [flexi-n]
                   |     +--ro flexi-n    l0-types:flexi-n
                   |     +--ro flexi-m?   l0-types:flexi-m
                   +--:(multi)
                      +--ro frequency-slots
                         +--ro frequency-slot* [flexi-n]
                            +--ro flexi-n    l0-types:flexi-n
                            +--ro flexi-m?   l0-types:flexi-m
     augment /te:te/te:tunnels/te:tunnel/te:secondary-paths
               /te:secondary-path/te:optimizations/te:algorithm
               /te:metric/te:optimization-metric
               /te:explicit-route-exclude-objects
               /te:route-object-exclude-object/te:type/te:label
               /te:label-hop/te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw (fixed-single-or-super-channel)?
             |     +--:(single)
             |     |  +--rw dwdm-n?               l0-types:dwdm-n
             |     +--:(multi)
             |        +--rw subcarrier-dwdm-n*    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?                     l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw (single-or-super-channel)?
                   +--:(single)
                   |  +--rw flexi-n?              l0-types:flexi-n
                   |  +--rw flexi-m?              l0-types:flexi-m
                   x--:(super)
                   |  x--rw subcarrier-flexi-n* [flexi-n]
                   |     +--rw flexi-n    l0-types:flexi-n
                   |     +--rw flexi-m?   l0-types:flexi-m
                   +--:(multi)
                      +--rw frequency-slots
                         +--rw frequency-slot* [flexi-n]
                            +--rw flexi-n    l0-types:flexi-n
                            +--rw flexi-m?   l0-types:flexi-m
     augment /te:te/te:tunnels/te:tunnel/te:secondary-paths
               /te:secondary-path/te:optimizations/te:algorithm
               /te:metric/te:optimization-metric
               /te:explicit-route-include-objects
               /te:route-object-include-object/te:type/te:label
               /te:label-hop/te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw (fixed-single-or-super-channel)?
             |     +--:(single)
             |     |  +--rw dwdm-n?               l0-types:dwdm-n
             |     +--:(multi)
             |        +--rw subcarrier-dwdm-n*    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?                     l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw (single-or-super-channel)?
                   +--:(single)
                   |  +--rw flexi-n?              l0-types:flexi-n
                   |  +--rw flexi-m?              l0-types:flexi-m
                   x--:(super)
                   |  x--rw subcarrier-flexi-n* [flexi-n]
                   |     +--rw flexi-n    l0-types:flexi-n
                   |     +--rw flexi-m?   l0-types:flexi-m
                   +--:(multi)
                      +--rw frequency-slots
                         +--rw frequency-slot* [flexi-n]
                            +--rw flexi-n    l0-types:flexi-n
                            +--rw flexi-m?   l0-types:flexi-m
     augment /te:te/te:tunnels/te:tunnel/te:secondary-paths
               /te:secondary-path/te:explicit-route-objects
               /te:route-object-exclude-always/te:type/te:label
               /te:label-hop/te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw (fixed-single-or-super-channel)?
             |     +--:(single)
             |     |  +--rw dwdm-n?               l0-types:dwdm-n
             |     +--:(multi)
             |        +--rw subcarrier-dwdm-n*    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?                     l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw (single-or-super-channel)?
                   +--:(single)
                   |  +--rw flexi-n?              l0-types:flexi-n
                   |  +--rw flexi-m?              l0-types:flexi-m
                   x--:(super)
                   |  x--rw subcarrier-flexi-n* [flexi-n]
                   |     +--rw flexi-n    l0-types:flexi-n
                   |     +--rw flexi-m?   l0-types:flexi-m
                   +--:(multi)
                      +--rw frequency-slots
                         +--rw frequency-slot* [flexi-n]
                            +--rw flexi-n    l0-types:flexi-n
                            +--rw flexi-m?   l0-types:flexi-m
     augment /te:te/te:tunnels/te:tunnel/te:secondary-paths
               /te:secondary-path/te:explicit-route-objects
               /te:route-object-include-exclude/te:type/te:label
               /te:label-hop/te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw (fixed-single-or-super-channel)?
             |     +--:(single)
             |     |  +--rw dwdm-n?               l0-types:dwdm-n
             |     +--:(multi)
             |        +--rw subcarrier-dwdm-n*    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?                     l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw (single-or-super-channel)?
                   +--:(single)
                   |  +--rw flexi-n?              l0-types:flexi-n
                   |  +--rw flexi-m?              l0-types:flexi-m
                   x--:(super)
                   |  x--rw subcarrier-flexi-n* [flexi-n]
                   |     +--rw flexi-n    l0-types:flexi-n
                   |     +--rw flexi-m?   l0-types:flexi-m
                   +--:(multi)
                      +--rw frequency-slots
                         +--rw frequency-slot* [flexi-n]
                            +--rw flexi-n    l0-types:flexi-n
                            +--rw flexi-m?   l0-types:flexi-m
     augment /te:te/te:tunnels/te:tunnel/te:secondary-paths
               /te:secondary-path/te:path-in-segment
               /te:label-restrictions/te:label-restriction
               /te:label-start/te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw dwdm-n?    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?    l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw flexi-n?   l0-types:flexi-n
     augment /te:te/te:tunnels/te:tunnel/te:secondary-paths
               /te:secondary-path/te:path-in-segment
               /te:label-restrictions/te:label-restriction/te:label-end
               /te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw dwdm-n?    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?    l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw flexi-n?   l0-types:flexi-n
     augment /te:te/te:tunnels/te:tunnel/te:secondary-paths
               /te:secondary-path/te:path-in-segment
               /te:label-restrictions/te:label-restriction/te:label-step
               /te:technology:
       +--:(wdm)
          +--rw (l0-grid-type)?
             +--:(fixed-dwdm)
             |  +--rw wson-dwdm-channel-spacing?    identityref
             +--:(cwdm)
             |  +--rw wson-cwdm-channel-spacing?    identityref
             +--:(flexi-grid)
                x--rw flexi-grid-channel-spacing?   identityref
                +--rw flexi-ncfg?                   identityref
                +--rw flexi-n-step?                 uint8
     augment /te:te/te:tunnels/te:tunnel/te:secondary-paths
               /te:secondary-path/te:path-out-segment
               /te:label-restrictions/te:label-restriction
               /te:label-start/te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw dwdm-n?    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?    l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw flexi-n?   l0-types:flexi-n
     augment /te:te/te:tunnels/te:tunnel/te:secondary-paths
               /te:secondary-path/te:path-out-segment
               /te:label-restrictions/te:label-restriction/te:label-end
               /te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw dwdm-n?    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?    l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw flexi-n?   l0-types:flexi-n
     augment /te:te/te:tunnels/te:tunnel/te:secondary-paths
               /te:secondary-path/te:path-out-segment
               /te:label-restrictions/te:label-restriction/te:label-step
               /te:technology:
       +--:(wdm)
          +--rw (l0-grid-type)?
             +--:(fixed-dwdm)
             |  +--rw wson-dwdm-channel-spacing?    identityref
             +--:(cwdm)
             |  +--rw wson-cwdm-channel-spacing?    identityref
             +--:(flexi-grid)
                x--rw flexi-grid-channel-spacing?   identityref
                +--rw flexi-ncfg?                   identityref
                +--rw flexi-n-step?                 uint8
     augment /te:te/te:tunnels/te:tunnel/te:secondary-paths
               /te:secondary-path/te:computed-paths-properties
               /te:computed-path-properties/te:path-properties
               /te:path-route-objects/te:path-route-object/te:type
               /te:label/te:label-hop/te:te-label/te:technology:
       +--:(wdm)
          +--ro (grid-type)?
             +--:(fixed-dwdm)
             |  +--ro (fixed-single-or-super-channel)?
             |     +--:(single)
             |     |  +--ro dwdm-n?               l0-types:dwdm-n
             |     +--:(multi)
             |        +--ro subcarrier-dwdm-n*    l0-types:dwdm-n
             +--:(cwdm)
             |  +--ro cwdm-n?                     l0-types:cwdm-n
             +--:(flexi-grid)
                +--ro (single-or-super-channel)?
                   +--:(single)
                   |  +--ro flexi-n?              l0-types:flexi-n
                   |  +--ro flexi-m?              l0-types:flexi-m
                   x--:(super)
                   |  x--ro subcarrier-flexi-n* [flexi-n]
                   |     +--ro flexi-n    l0-types:flexi-n
                   |     +--ro flexi-m?   l0-types:flexi-m
                   +--:(multi)
                      +--ro frequency-slots
                         +--ro frequency-slot* [flexi-n]
                            +--ro flexi-n    l0-types:flexi-n
                            +--ro flexi-m?   l0-types:flexi-m
     augment /te:te/te:tunnels/te:tunnel/te:secondary-reverse-paths
               /te:secondary-reverse-path/te:optimizations/te:algorithm
               /te:metric/te:optimization-metric
               /te:explicit-route-exclude-objects
               /te:route-object-exclude-object/te:type/te:label
               /te:label-hop/te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw (fixed-single-or-super-channel)?
             |     +--:(single)
             |     |  +--rw dwdm-n?               l0-types:dwdm-n
             |     +--:(multi)
             |        +--rw subcarrier-dwdm-n*    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?                     l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw (single-or-super-channel)?
                   +--:(single)
                   |  +--rw flexi-n?              l0-types:flexi-n
                   |  +--rw flexi-m?              l0-types:flexi-m
                   x--:(super)
                   |  x--rw subcarrier-flexi-n* [flexi-n]
                   |     +--rw flexi-n    l0-types:flexi-n
                   |     +--rw flexi-m?   l0-types:flexi-m
                   +--:(multi)
                      +--rw frequency-slots
                         +--rw frequency-slot* [flexi-n]
                            +--rw flexi-n    l0-types:flexi-n
                            +--rw flexi-m?   l0-types:flexi-m
     augment /te:te/te:tunnels/te:tunnel/te:secondary-reverse-paths
               /te:secondary-reverse-path/te:optimizations/te:algorithm
               /te:metric/te:optimization-metric
               /te:explicit-route-include-objects
               /te:route-object-include-object/te:type/te:label
               /te:label-hop/te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw (fixed-single-or-super-channel)?
             |     +--:(single)
             |     |  +--rw dwdm-n?               l0-types:dwdm-n
             |     +--:(multi)
             |        +--rw subcarrier-dwdm-n*    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?                     l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw (single-or-super-channel)?
                   +--:(single)
                   |  +--rw flexi-n?              l0-types:flexi-n
                   |  +--rw flexi-m?              l0-types:flexi-m
                   x--:(super)
                   |  x--rw subcarrier-flexi-n* [flexi-n]
                   |     +--rw flexi-n    l0-types:flexi-n
                   |     +--rw flexi-m?   l0-types:flexi-m
                   +--:(multi)
                      +--rw frequency-slots
                         +--rw frequency-slot* [flexi-n]
                            +--rw flexi-n    l0-types:flexi-n
                            +--rw flexi-m?   l0-types:flexi-m
     augment /te:te/te:tunnels/te:tunnel/te:secondary-reverse-paths
               /te:secondary-reverse-path/te:explicit-route-objects
               /te:route-object-exclude-always/te:type/te:label
               /te:label-hop/te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw (fixed-single-or-super-channel)?
             |     +--:(single)
             |     |  +--rw dwdm-n?               l0-types:dwdm-n
             |     +--:(multi)
             |        +--rw subcarrier-dwdm-n*    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?                     l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw (single-or-super-channel)?
                   +--:(single)
                   |  +--rw flexi-n?              l0-types:flexi-n
                   |  +--rw flexi-m?              l0-types:flexi-m
                   x--:(super)
                   |  x--rw subcarrier-flexi-n* [flexi-n]
                   |     +--rw flexi-n    l0-types:flexi-n
                   |     +--rw flexi-m?   l0-types:flexi-m
                   +--:(multi)
                      +--rw frequency-slots
                         +--rw frequency-slot* [flexi-n]
                            +--rw flexi-n    l0-types:flexi-n
                            +--rw flexi-m?   l0-types:flexi-m
     augment /te:te/te:tunnels/te:tunnel/te:secondary-reverse-paths
               /te:secondary-reverse-path/te:explicit-route-objects
               /te:route-object-include-exclude/te:type/te:label
               /te:label-hop/te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw (fixed-single-or-super-channel)?
             |     +--:(single)
             |     |  +--rw dwdm-n?               l0-types:dwdm-n
             |     +--:(multi)
             |        +--rw subcarrier-dwdm-n*    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?                     l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw (single-or-super-channel)?
                   +--:(single)
                   |  +--rw flexi-n?              l0-types:flexi-n
                   |  +--rw flexi-m?              l0-types:flexi-m
                   x--:(super)
                   |  x--rw subcarrier-flexi-n* [flexi-n]
                   |     +--rw flexi-n    l0-types:flexi-n
                   |     +--rw flexi-m?   l0-types:flexi-m
                   +--:(multi)
                      +--rw frequency-slots
                         +--rw frequency-slot* [flexi-n]
                            +--rw flexi-n    l0-types:flexi-n
                            +--rw flexi-m?   l0-types:flexi-m
     augment /te:te/te:tunnels/te:tunnel/te:secondary-reverse-paths
               /te:secondary-reverse-path/te:path-in-segment
               /te:label-restrictions/te:label-restriction
               /te:label-start/te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw dwdm-n?    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?    l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw flexi-n?   l0-types:flexi-n
     augment /te:te/te:tunnels/te:tunnel/te:secondary-reverse-paths
               /te:secondary-reverse-path/te:path-in-segment
               /te:label-restrictions/te:label-restriction/te:label-end
               /te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw dwdm-n?    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?    l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw flexi-n?   l0-types:flexi-n
     augment /te:te/te:tunnels/te:tunnel/te:secondary-reverse-paths
               /te:secondary-reverse-path/te:path-in-segment
               /te:label-restrictions/te:label-restriction/te:label-step
               /te:technology:
       +--:(wdm)
          +--rw (l0-grid-type)?
             +--:(fixed-dwdm)
             |  +--rw wson-dwdm-channel-spacing?    identityref
             +--:(cwdm)
             |  +--rw wson-cwdm-channel-spacing?    identityref
             +--:(flexi-grid)
                x--rw flexi-grid-channel-spacing?   identityref
                +--rw flexi-ncfg?                   identityref
                +--rw flexi-n-step?                 uint8
     augment /te:te/te:tunnels/te:tunnel/te:secondary-reverse-paths
               /te:secondary-reverse-path/te:path-out-segment
               /te:label-restrictions/te:label-restriction
               /te:label-start/te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw dwdm-n?    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?    l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw flexi-n?   l0-types:flexi-n
     augment /te:te/te:tunnels/te:tunnel/te:secondary-reverse-paths
               /te:secondary-reverse-path/te:path-out-segment
               /te:label-restrictions/te:label-restriction/te:label-end
               /te:te-label/te:technology:
       +--:(wdm)
          +--rw (grid-type)?
             +--:(fixed-dwdm)
             |  +--rw dwdm-n?    l0-types:dwdm-n
             +--:(cwdm)
             |  +--rw cwdm-n?    l0-types:cwdm-n
             +--:(flexi-grid)
                +--rw flexi-n?   l0-types:flexi-n
     augment /te:te/te:tunnels/te:tunnel/te:secondary-reverse-paths
               /te:secondary-reverse-path/te:path-out-segment
               /te:label-restrictions/te:label-restriction/te:label-step
               /te:technology:
       +--:(wdm)
          +--rw (l0-grid-type)?
             +--:(fixed-dwdm)
             |  +--rw wson-dwdm-channel-spacing?    identityref
             +--:(cwdm)
             |  +--rw wson-cwdm-channel-spacing?    identityref
             +--:(flexi-grid)
                x--rw flexi-grid-channel-spacing?   identityref
                +--rw flexi-ncfg?                   identityref
                +--rw flexi-n-step?                 uint8
     augment /te:te/te:tunnels/te:tunnel/te:secondary-reverse-paths
               /te:secondary-reverse-path/te:computed-paths-properties
               /te:computed-path-properties/te:path-properties
               /te:path-route-objects/te:path-route-object/te:type
               /te:label/te:label-hop/te:te-label/te:technology:
       +--:(wdm)
          +--ro (grid-type)?
             +--:(fixed-dwdm)
             |  +--ro (fixed-single-or-super-channel)?
             |     +--:(single)
             |     |  +--ro dwdm-n?               l0-types:dwdm-n
             |     +--:(multi)
             |        +--ro subcarrier-dwdm-n*    l0-types:dwdm-n
             +--:(cwdm)
             |  +--ro cwdm-n?                     l0-types:cwdm-n
             +--:(flexi-grid)
                +--ro (single-or-super-channel)?
                   +--:(single)
                   |  +--ro flexi-n?              l0-types:flexi-n
                   |  +--ro flexi-m?              l0-types:flexi-m
                   x--:(super)
                   |  x--ro subcarrier-flexi-n* [flexi-n]
                   |     +--ro flexi-n    l0-types:flexi-n
                   |     +--ro flexi-m?   l0-types:flexi-m
                   +--:(multi)
                      +--ro frequency-slots
                         +--ro frequency-slot* [flexi-n]
                            +--ro flexi-n    l0-types:flexi-n
                            +--ro flexi-m?   l0-types:flexi-m
     augment /te:te/te:lsps/te:lsp/te:lsp-actual-route-information
               /te:lsp-actual-route-information/te:type/te:label
               /te:label-hop/te:te-label/te:technology:
       +--:(wdm)
          +--ro (grid-type)?
             +--:(fixed-dwdm)
             |  +--ro (fixed-single-or-super-channel)?
             |     +--:(single)
             |     |  +--ro dwdm-n?               l0-types:dwdm-n
             |     +--:(multi)
             |        +--ro subcarrier-dwdm-n*    l0-types:dwdm-n
             +--:(cwdm)
             |  +--ro cwdm-n?                     l0-types:cwdm-n
             +--:(flexi-grid)
                +--ro (single-or-super-channel)?
                   +--:(single)
                   |  +--ro flexi-n?              l0-types:flexi-n
                   |  +--ro flexi-m?              l0-types:flexi-m
                   x--:(super)
                   |  x--ro subcarrier-flexi-n* [flexi-n]
                   |     +--ro flexi-n    l0-types:flexi-n
                   |     +--ro flexi-m?   l0-types:flexi-m
                   +--:(multi)
                      +--ro frequency-slots
                         +--ro frequency-slot* [flexi-n]
                            +--ro flexi-n    l0-types:flexi-n
                            +--ro flexi-m?   l0-types:flexi-m

                       Figure 2: WDM Tunnel YANG tree

5.2.  YANG Code

   <CODE BEGINS> file "ietf-wdm-tunnel@2024-07-02.yang"
   module ietf-wdm-tunnel {
     yang-version 1.1;
     namespace
       "urn:ietf:params:xml:ns:yang:ietf-wdm-tunnel";
     prefix "wdm-tnl";

     import ietf-te {
       prefix "te";
       reference
         "RFC YYYY: A YANG Data Model for Traffic Engineering Tunnels,
         Label Switched Paths and Interfaces.";
     }
     /* RFC Ed.: replace YYYY with the number assigned
        to the RFC once draft-ietf-teas-yang-te becomes an RFC.*/

     import ietf-layer0-types {
       prefix "l0-types";
     }

     import ietf-yang-types {
       prefix "yang";
     }

     organization
       "IETF CCAMP Working Group";
     contact
       "WG Web:   <http://tools.ietf.org/wg/ccamp/>
        WG List:  <mailto:ccamp@ietf.org>

        Editor:   Jorge E. Lopez de Vergara
                  <jorge.lopez_vergara@uam.es>

        Editor:   Daniel Perdices
                  <daniel.perdices@naudit.es>

        Editor:   Victor Lopez
                  <victor.lopez@nokia.com>

        Editor:   Italo Busi
                  <italo.busi@nokia.com>

        Editor:   Aihua Guo
                  <aihuaguo.ietf@gmail.com>";

     description
       "This module defines a YANG data model for configuring
        and managing Wavelength-Division Multiplexing (WDM) switched
        optical tunnels.

       The model fully conforms to the Network Management
       Datastore Architecture (NMDA).

       Copyright (c) 2021 IETF Trust and the persons
       identified as authors of the code.  All rights reserved.

       Redistribution and use in source and binary forms, with or
       without modification, is permitted pursuant to, and subject
       to the license terms contained in, the Simplified BSD License
       set forth in Section 4.c of the IETF Trust's Legal Provisions
       Relating to IETF Documents
       (https://trustee.ietf.org/license-info).

       This version of this YANG module is part of RFC XXXX; see
       the RFC itself for full legal notices.";

     revision "2024-07-02" {
       description
         "Updated revision with combined WSON and Flexi-grid tunnel
          YANG model";

       reference
         "RFC XXXX: YANG data model for WDM tunnels";
       // RFC Ed.: replace XXXX with actual RFC number, update date
       // information and remove this note
     }

     /*
      * Groupings
      */
     grouping additional-transceiver-configuration-constraints {
       description
         "This grouping defines additional optional constraints for
          transceiver configurations related to tunnel selection.
          These constraints further limit the resources available
          to the tunnel. All constraints operate inclusively, using
          an AND logic. For example, if a specific frequency range
          is selected, the tunnel must also be constrained to match
          only that range.

          When these constraints are combined with the operational
          mode, the list of operational modes should exclude any
          modes that cannot satisfy the additional constraints.
          For instance, if the frequency is restricted to the C-band,
          the list of operational modes should not include any modes
          applicable only to the L-band.";

       leaf otsi-carrier-frequency {
           type l0-types:frequency-thz;
           description
             "OTSi carrier frequency, i.e. configured transmitter
              frequency.";
       }

       container tx-tune-constraints {
         description
           "The permissible tuning frequency range for the
            transmitter.";

         uses l0-types:transceiver-tuning-range;
       }

       leaf-list line-coding-bitrate {
         type identityref {
           base l0-types:line-coding;
         }
         description
           "The list of the bit rate/line coding of the optical
           tributary signal that constrains the configuration of
           the transceiver.";
         reference
           "ITU-T G.698.2 section 7.1.2";
       }

       leaf tx-channel-power {
         type l0-types:power-dbm;
         description
           "The preferred channel transmit power.";
       }

       leaf preferred-rx-channel-power {
         type l0-types:power-dbm;
         description
           "The preferred channel received power.";
       }

       /*
       leaf inverse-multiplexing-mode {
         //type l0-types:inverse-multiplexing-mode;
         type string;
         description
           "The inverse multiplexing mode.";
       }
       */

       uses l0-types:l0-path-constraints;
     }

     grouping transceiver-constraints {
       description
         "This grouping defines constraints for transceiver
          configurations";

       leaf-list operational-modes {
         type string {
           length "1..255";
         }
         description
           "List of operational mode ids of the transceiver.";
       }

       uses additional-transceiver-configuration-constraints;
     }

     grouping transceiver-config {
       description
         "This grouping defines explicit transceiver
          configurations.";

       leaf transponder-id {
         type uint32;
         description "transponder identifier";
       }

       list transceivers {
         key "transceiver-id";
         description
           "List of transceivers used within the transponder.";

         leaf transceiver-id {
           type uint32;
           description
           "transceiver identifier";
         }
         leaf otsi-carrier-id {
           type uint16;
           description
             "OTSi carrier identifier associated with the
              transceiver.";
         }

         uses transceiver-constraints;
       }
     }

     grouping path-transceiver-config {
       description
         "This grouping defines a set of transceivers on a node,
          serving as either source transceivers, destination
          transceivers, or regenerators.";

       choice node-position {
         description
           "The relative position of the node within the path.";
         case source {
           container source-transceiver {
             description
               "Constraints for transceiver configurations at the
                source node";

             uses transceiver-config;
           }
         }
         case destination {
           container destination-transceiver {
             description
               "Constraints for transceiver configurations at the
                destination node";

             uses transceiver-config;
           }
         }
         case transit {
           container regen-transceivers {
             description
               "Constraints for transceiver configurations at the
                transit node equipped with regenerators";

             leaf regen-group-id {
               type uint32;
               description
                 "3R regen group identifier.";
             }

             /*
             leaf regen-level {
               //type l0-types:regen-level;
               type string;
               description
                 "Indicate the chosen level of 3R regeneration.";
             }
             */

             container incoming-transceiver {
               description
                 "Constraints for transceiver configurations at the
                  incoming direction of the regenerator";

               uses transceiver-config;
             }

             container outgoing-transceiver {
               description
                 "Constraints for transceiver configurations at the
                  outgoing direction of the regenerator";

               uses transceiver-config;
             }
           }
         }
       }
     }

     grouping transceiver-measured-parameters {
       description
         "Measured transceiver parameters.";

       container pre-fec-ber {
         description
           "Timestamp and value of the Pre-FEC Bit Error Rate (BER)
            of the received signal.";

         leaf timestamp {
           type yang:timestamp;
           description
             "Timestamp associated with the Pre-FEC BER.";
         }

         leaf value {
           type decimal64 {
             fraction-digits 18;
           }
           description
             "Pre-FEC BER of the received signal.";
         }
       }

       container q-factor {
         description
           "Timestamp and value of the estimated Q-factor based on
            the pre-FEC BER.";

         leaf timestamp {
           type yang:timestamp;
           description
             "Timestamp associated with the Q-factor.";
         }

         leaf value {
           type l0-types:decimal-2-or-null;
           units "dB";
           description
             "Estimated Q-factor based on the pre-FEC BER.";
         }
       }
     }

     grouping transceiver-state {
       description
         "This grouping includes common transceiver state
          information.";

       leaf transponder-id {
         type uint32;
         description "transponder identifier";
       }

       list transceivers {
         key "transceiver-id";
         description
           "List of transceivers used within the transponder.";

         leaf otsi-carrier-id {
           type uint16;
           description
             "OTSi carrier identifier associated with the
              transceiver.";
         }
         leaf transceiver-id {
           type uint32;
           description
           "transceiver identifier";
         }

         leaf otsi-carrier-frequency {
           type union {
             type l0-types:frequency-thz;
             type empty;
           }
           description
             "OTSi carrier frequency, equivalent to the
             actual configured transmitter frequency, when known, or
             an empty value when unknown.";
         }

         uses l0-types:common-transceiver-readonly-param;
       }
     }

     grouping e2e-media-channel-info {
       description
         "This grouping includes end-to-end media channel path id
          information.";

       leaf-list e2e-mc-path-id {
         type uint16;
         description
           "The list of the possible end-to-end Media Channel
           (e2e-MC) paths associated with the OTSi which have
           different optical impairments.

           This list is meaningful in case the OTSi can be associated
           with multiple end-to-end Media Channel (e2e-MC) paths
           (e.g., when OPS protection is configured).

           The list can be empty when the OTSi has only one
           e2e-MC path.";
       }
     }

     grouping path-transceiver-state {
       description
         "This grouping defines the state of transceivers on a
          node functioning as starting, terminating transceivers,
          or regenerators.";

       choice node-position {
         description
           "The relative position of the node within the path.";
         case source {
           container source-transceiver {
             description
               "Transceiver state at the source node.";

             uses transceiver-state;
           }
         }
         case destination {
           container destination-transceiver {
             description
               "Transceiver state at the destination node.";

             uses transceiver-state;
           }
         }
         case transit {
           container regen-transceivers {
             description
               "Transceiver state at the transit node equipped
                with regenerators.";

             leaf regen-group-id {
               type uint32;
               description
                 "3R regen group identifier.";
             }

             /*
             leaf regen-level {
               //type l0-types:regen-level;
               type string;
               description
                 "Indicate the chosen level of 3R regeneration.";
             }
             */

             container incoming-transceiver {
               description
                 "Transceiver state on the incoming direction of
                  the regenerator.";

               uses transceiver-state;
             }

             container outgoing-transceiver {
               description
                 "Transceiver state on the outgoing direction of
                  the regenerator.";

               uses transceiver-state;
             }
           }
         }
       }
     }

     grouping global-transceiver-constraint {
       description
         "This grouping defines the constraints for transceiver
          configurations.";

       container transceiver-constraint {
         description
           "Constraints for transceiver configurations";

         uses transceiver-constraints;
       }
     }

     grouping wdm-constraint {
       description
         "Grouping for WDM tunnel constraints";

       container wdm-constraint {
         description
           "WDM tunnel constraints.";

         uses global-transceiver-constraint;

         leaf use-regen {
           type boolean;
           default false;
           description
             "Indicate whether or not regenerators (e.g. 3R) should be
              considered. When this parameter is set to true, the
              tunnel path may include a regen when the path is not
              feasible for direct optical reach.";
         }

         /*
         leaf-list regen-levels {
           when '../use-regen = "true"' {
             description
               "Regenerator must be enabled for the regen levels
                to be considered.";
           }
           //type l0-types:regen-level;
           type string;
           description
             "Indicate the levels of 3R regeration permitted by
              the tunnel.";
         }
         */

         leaf wavelength-conversion {
           when '../use-regen = "true"' {
             description
               "Regenerator must be enabled for wavelength conversion
                to be considered.";
           }
           type boolean;
           default false;
           description
             "Indicate whether or not wavelength conversion is allowed
              along the tunnel path. Applicable only when 3R
              regeneration is enabled.";
         }

         uses l0-types:l0-tunnel-attributes;

         leaf guard-band-size {
           type l0-types:frequency-thz;
           description
             "Guard band size in THz.";
         }

         leaf matching-fwd-rev-wavelength {
           type boolean;
           default true;
           description
             "Indicate whether or not the assigned channels for
              forward and reverse wavelength path must be the same.";
         }

         leaf allow-retuning {
           type boolean;
           default false;
           description
             "Indicate whether or not re-tuning is allowed when one or
              more paths of a WDM tunnel is being restored. Typically,
              wavelength retuning is not preferred for wavelength
              planning considerations.";
         }
         leaf delta-power {
           type l0-types:power-ratio;
           description
             "Delta power in dB indicating the per-channel power
              deviation from the nominal power per channel at the
              output of an OMS.";
         }
       }
     }

     /*
     grouping digital-layer-constraint {
       description
         "Grouping for digital layer constraints";

       container digital-constraint {
         description
           "Digital layer constraints.";

         leaf digital-termination {
           //type l0-types:digital-termination-type;
           type string;
           description
             "Identifies how digital signal is terminated.";
         }

         leaf multiplexing-label-type {
           //type l0-types:multiplexing-label-type;
           type string;
           description
             "Identifies the type of multiplexing technology
              used (e.g. ODUj,k).";
         }
       }
     }
     */

     /*
      * Data nodes
      */

     /*
      * Global constraints for WDM tunnel
      */
     augment "/te:te/te:tunnels/te:tunnel" {
       description
         "Augment with additional parameters required for WDM
          tunnel configurations.";
       uses wdm-constraint;
       //uses digital-layer-constraint;
     }

     /*
      * Transceiver constraints for primary path
      * Applicable to starting, terminating and regenerator
      * transceivers.
      */
     augment "/te:te/te:tunnels/te:tunnel/te:primary-paths/"
           + "te:primary-path/te:explicit-route-objects/"
           + "te:route-object-exclude-always/te:type/"
           + "te:numbered-node-hop/te:numbered-node-hop" {
       description
         "Augment TE primary path with transceiver configurations.";

       uses path-transceiver-config;
     }

     /*
      * Transceiver constraints for primary reverse path
      * Applicable to starting, terminating and regenerator
      * transceivers.
      */
     augment "/te:te/te:tunnels/te:tunnel/te:primary-paths/"
           + "te:primary-path/te:primary-reverse-path/"
           + "te:explicit-route-objects/"
           + "te:route-object-exclude-always/te:type/"
           + "te:numbered-node-hop/te:numbered-node-hop" {
       description
         "Augment TE primary reverse path with transceiver
          configurations.";

       uses path-transceiver-config;
     }

     /*
      * Transceiver constraints for secondary path
      * Applicable to starting, terminating and regenerator
      * transceivers.
      */
     augment "/te:te/te:tunnels/te:tunnel/te:secondary-paths/"
           + "te:secondary-path/te:explicit-route-objects/"
           + "te:route-object-exclude-always/te:type/"
           + "te:numbered-node-hop/te:numbered-node-hop" {
       description
         "Augment TE secondary path with transceiver configurations.";

       uses path-transceiver-config;
     }

     /*
      * Transceiver constraints for secondary reverse path
      * Applicable to starting, terminating and regenerator
      * transceivers.
      */
     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:secondary-reverse-paths/"
           + "te:secondary-reverse-path/"
           + "te:explicit-route-objects/"
           + "te:route-object-exclude-always/te:type/"
           + "te:numbered-node-hop/te:numbered-node-hop" {
       description
         "Augment TE secondary reverse path with transceiver
          configurations.";

       uses path-transceiver-config;
     }

     /*
      * Computed transceiver properties for primary path.
      */
     augment "/te:te/te:tunnels/te:tunnel/te:primary-paths/"
           + "te:primary-path/te:computed-paths-properties/"
           + "te:computed-path-properties/te:path-properties/"
           + "te:path-route-objects/te:path-route-object/"
           + "te:type/te:numbered-node-hop/te:numbered-node-hop" {
       description
         "Augment TE computed primary path with transceiver
          properties.";

       uses path-transceiver-state;
     }

     augment "/te:te/te:tunnels/te:tunnel/te:primary-paths/"
           + "te:primary-path/te:computed-paths-properties/"
           + "te:computed-path-properties/te:path-properties/"
           + "te:path-route-objects/te:path-route-object/"
           + "te:type/te:numbered-node-hop/te:numbered-node-hop/"
           + "wdm-tnl:node-position/wdm-tnl:source/"
           + "wdm-tnl:source-transceiver/wdm-tnl:transceivers" {
       description
         "Augment source transceiver with additional estimated
          parameters.";

       uses l0-types:l0-path-properties;
     }

     augment "/te:te/te:tunnels/te:tunnel/te:primary-paths/"
           + "te:primary-path/te:computed-paths-properties/"
           + "te:computed-path-properties/te:path-properties/"
           + "te:path-route-objects/te:path-route-object/"
           + "te:type/te:numbered-node-hop/te:numbered-node-hop/"
           + "wdm-tnl:node-position/wdm-tnl:destination/"
           + "wdm-tnl:destination-transceiver/wdm-tnl:transceivers" {
       description
         "Augment destination transceiver with additional estimated
          parameters.";

       uses l0-types:l0-path-properties;
     }

     augment "/te:te/te:tunnels/te:tunnel/te:primary-paths/"
           + "te:primary-path/te:computed-paths-properties/"
           + "te:computed-path-properties/te:path-properties/"
           + "te:path-route-objects/te:path-route-object/"
           + "te:type/te:numbered-node-hop/te:numbered-node-hop/"
           + "wdm-tnl:node-position/wdm-tnl:transit/"
           + "wdm-tnl:regen-transceivers/"
           + "wdm-tnl:incoming-transceiver/wdm-tnl:transceivers" {
       description
         "Augment regen incoming transceiver with additional estimated
          parameters.";

       uses l0-types:l0-path-properties;
     }

     augment "/te:te/te:tunnels/te:tunnel/te:primary-paths/"
           + "te:primary-path/te:computed-paths-properties/"
           + "te:computed-path-properties/te:path-properties/"
           + "te:path-route-objects/te:path-route-object/"
           + "te:type/te:numbered-node-hop/te:numbered-node-hop/"
           + "wdm-tnl:node-position/wdm-tnl:transit/"
           + "wdm-tnl:regen-transceivers/"
           + "wdm-tnl:outgoing-transceiver/wdm-tnl:transceivers" {
       description
         "Augment regen outgoing transceiver with additional estimated
          parameters.";

       uses l0-types:l0-path-properties;
     }

     /*
      * Computed transceiver properties for primary reverse path.
      */
     augment "/te:te/te:tunnels/te:tunnel/te:primary-paths/"
           + "te:primary-path/te:primary-reverse-path/"
           + "te:computed-paths-properties/"
           + "te:computed-path-properties/te:path-properties/"
           + "te:path-route-objects/te:path-route-object/"
           + "te:type/te:numbered-node-hop/te:numbered-node-hop" {
       description
         "Augment TE computed primary path with transceiver
          properties.";

       uses path-transceiver-state;
     }

     augment "/te:te/te:tunnels/te:tunnel/te:primary-paths/"
           + "te:primary-path/te:primary-reverse-path/"
           + "te:computed-paths-properties/"
           + "te:computed-path-properties/te:path-properties/"
           + "te:path-route-objects/te:path-route-object/"
           + "te:type/te:numbered-node-hop/te:numbered-node-hop/"
           + "wdm-tnl:node-position/wdm-tnl:source/"
           + "wdm-tnl:source-transceiver/wdm-tnl:transceivers" {
       description
         "Augment source transceiver with additional estimated
          parameters.";

       uses l0-types:l0-path-properties;
     }

     augment "/te:te/te:tunnels/te:tunnel/te:primary-paths/"
           + "te:primary-path/te:primary-reverse-path/"
           + "te:computed-paths-properties/"
           + "te:computed-path-properties/te:path-properties/"
           + "te:path-route-objects/te:path-route-object/"
           + "te:type/te:numbered-node-hop/te:numbered-node-hop/"
           + "wdm-tnl:node-position/wdm-tnl:destination/"
           + "wdm-tnl:destination-transceiver/wdm-tnl:transceivers" {
       description
         "Augment destination transceiver with additional estimated
          parameters.";

       uses l0-types:l0-path-properties;
     }

     augment "/te:te/te:tunnels/te:tunnel/te:primary-paths/"
           + "te:primary-path/te:primary-reverse-path/"
           + "te:computed-paths-properties/"
           + "te:computed-path-properties/te:path-properties/"
           + "te:path-route-objects/te:path-route-object/"
           + "te:type/te:numbered-node-hop/te:numbered-node-hop/"
           + "wdm-tnl:node-position/wdm-tnl:transit/"
           + "wdm-tnl:regen-transceivers/"
           + "wdm-tnl:incoming-transceiver/wdm-tnl:transceivers" {
       description
         "Augment regen incoming transceiver with additional estimated
          parameters.";

       uses l0-types:l0-path-properties;
     }

     augment "/te:te/te:tunnels/te:tunnel/te:primary-paths/"
           + "te:primary-path/te:primary-reverse-path/"
           + "te:computed-paths-properties/"
           + "te:computed-path-properties/te:path-properties/"
           + "te:path-route-objects/te:path-route-object/"
           + "te:type/te:numbered-node-hop/te:numbered-node-hop/"
           + "wdm-tnl:node-position/wdm-tnl:transit/"
           + "wdm-tnl:regen-transceivers/"
           + "wdm-tnl:outgoing-transceiver/wdm-tnl:transceivers" {
       description
         "Augment regen outgoing transceiver with additional estimated
          parameters.";

       uses l0-types:l0-path-properties;
     }

     /*
      * Computed transceiver properties for secondary path.
      */
     augment "/te:te/te:tunnels/te:tunnel/te:secondary-paths/"
           + "te:secondary-path/te:computed-paths-properties/"
           + "te:computed-path-properties/te:path-properties/"
           + "te:path-route-objects/te:path-route-object/"
           + "te:type/te:numbered-node-hop/te:numbered-node-hop" {
       description
         "Augment TE computed primary path with transceiver
          properties.";

       uses path-transceiver-state;
     }

     augment "/te:te/te:tunnels/te:tunnel/te:secondary-paths/"
           + "te:secondary-path/te:computed-paths-properties/"
           + "te:computed-path-properties/te:path-properties/"
           + "te:path-route-objects/te:path-route-object/"
           + "te:type/te:numbered-node-hop/te:numbered-node-hop/"
           + "wdm-tnl:node-position/wdm-tnl:source/"
           + "wdm-tnl:source-transceiver/wdm-tnl:transceivers" {
       description
         "Augment source transceiver with additional estimated
          parameters.";

       uses l0-types:l0-path-properties;
     }

     augment "/te:te/te:tunnels/te:tunnel/te:secondary-paths/"
           + "te:secondary-path/te:computed-paths-properties/"
           + "te:computed-path-properties/te:path-properties/"
           + "te:path-route-objects/te:path-route-object/"
           + "te:type/te:numbered-node-hop/te:numbered-node-hop/"
           + "wdm-tnl:node-position/wdm-tnl:destination/"
           + "wdm-tnl:destination-transceiver/wdm-tnl:transceivers" {
       description
         "Augment destination transceiver with additional estimated
          parameters.";

       uses l0-types:l0-path-properties;
     }

     augment "/te:te/te:tunnels/te:tunnel/te:secondary-paths/"
           + "te:secondary-path/te:computed-paths-properties/"
           + "te:computed-path-properties/te:path-properties/"
           + "te:path-route-objects/te:path-route-object/"
           + "te:type/te:numbered-node-hop/te:numbered-node-hop/"
           + "wdm-tnl:node-position/wdm-tnl:transit/"
           + "wdm-tnl:regen-transceivers/"
           + "wdm-tnl:incoming-transceiver/wdm-tnl:transceivers" {
       description
         "Augment regen incoming transceiver with additional estimated
          parameters.";

       uses l0-types:l0-path-properties;
     }

     augment "/te:te/te:tunnels/te:tunnel/te:secondary-paths/"
           + "te:secondary-path/te:computed-paths-properties/"
           + "te:computed-path-properties/te:path-properties/"
           + "te:path-route-objects/te:path-route-object/"
           + "te:type/te:numbered-node-hop/te:numbered-node-hop/"
           + "wdm-tnl:node-position/wdm-tnl:transit/"
           + "wdm-tnl:regen-transceivers/"
           + "wdm-tnl:outgoing-transceiver/wdm-tnl:transceivers" {
       description
         "Augment regen outgoing transceiver with additional estimated
          parameters.";

       uses l0-types:l0-path-properties;
     }

     /*
      * Computed transceiver properties for secondary reverse path.
      */
     augment "/te:te/te:tunnels/te:tunnel/te:secondary-reverse-paths/"
           + "te:secondary-reverse-path/te:computed-paths-properties/"
           + "te:computed-path-properties/te:path-properties/"
           + "te:path-route-objects/te:path-route-object/"
           + "te:type/te:numbered-node-hop/te:numbered-node-hop" {
       description
         "Augment TE computed primary path with transceiver
          properties.";

       uses path-transceiver-state;
     }

     augment "/te:te/te:tunnels/te:tunnel/te:secondary-reverse-paths/"
           + "te:secondary-reverse-path/te:computed-paths-properties/"
           + "te:computed-path-properties/te:path-properties/"
           + "te:path-route-objects/te:path-route-object/"
           + "te:type/te:numbered-node-hop/te:numbered-node-hop/"
           + "wdm-tnl:node-position/wdm-tnl:source/"
           + "wdm-tnl:source-transceiver/wdm-tnl:transceivers" {
       description
         "Augment source transceiver with additional estimated
          parameters.";

       uses l0-types:l0-path-properties;
     }

     augment "/te:te/te:tunnels/te:tunnel/te:secondary-reverse-paths/"
           + "te:secondary-reverse-path/te:computed-paths-properties/"
           + "te:computed-path-properties/te:path-properties/"
           + "te:path-route-objects/te:path-route-object/"
           + "te:type/te:numbered-node-hop/te:numbered-node-hop/"
           + "wdm-tnl:node-position/wdm-tnl:destination/"
           + "wdm-tnl:destination-transceiver/wdm-tnl:transceivers" {
       description
         "Augment destination transceiver with additional estimated
          parameters.";

       uses l0-types:l0-path-properties;
     }

     augment "/te:te/te:tunnels/te:tunnel/te:secondary-reverse-paths/"
           + "te:secondary-reverse-path/te:computed-paths-properties/"
           + "te:computed-path-properties/te:path-properties/"
           + "te:path-route-objects/te:path-route-object/"
           + "te:type/te:numbered-node-hop/te:numbered-node-hop/"
           + "wdm-tnl:node-position/wdm-tnl:transit/"
           + "wdm-tnl:regen-transceivers/"
           + "wdm-tnl:incoming-transceiver/wdm-tnl:transceivers" {
       description
         "Augment regen incoming transceiver with additional estimated
          parameters.";

       uses l0-types:l0-path-properties;
     }

     augment "/te:te/te:tunnels/te:tunnel/te:secondary-reverse-paths/"
           + "te:secondary-reverse-path/te:computed-paths-properties/"
           + "te:computed-path-properties/te:path-properties/"
           + "te:path-route-objects/te:path-route-object/"
           + "te:type/te:numbered-node-hop/te:numbered-node-hop/"
           + "wdm-tnl:node-position/wdm-tnl:transit/"
           + "wdm-tnl:regen-transceivers/"
           + "wdm-tnl:outgoing-transceiver/wdm-tnl:transceivers" {
       description
         "Augment regen outgoing transceiver with additional estimated
          parameters.";

       uses l0-types:l0-path-properties;
     }

     /*
      * Actual transceiver state.
      */
     augment "/te:te/te:lsps/te:lsp/"
           + "te:lsp-actual-route-information/"
           + "te:lsp-actual-route-information/te:type/"
           + "te:numbered-node-hop/te:numbered-node-hop" {
       description
         "Augment TE LSP with WDM path state.";

       uses path-transceiver-state;
     }

     augment "/te:te/te:lsps/te:lsp/"
           + "te:lsp-actual-route-information/"
           + "te:lsp-actual-route-information/te:type/"
           + "te:numbered-node-hop/te:numbered-node-hop/"
           + "wdm-tnl:node-position/wdm-tnl:source/"
           + "wdm-tnl:source-transceiver/wdm-tnl:transceivers" {
       description
         "Augment source transceiver with additional measured
          parameters.";

       uses transceiver-measured-parameters;
     }

     augment "/te:te/te:lsps/te:lsp/"
           + "te:lsp-actual-route-information/"
           + "te:lsp-actual-route-information/te:type/"
           + "te:numbered-node-hop/te:numbered-node-hop/"
           + "wdm-tnl:node-position/wdm-tnl:destination/"
           + "wdm-tnl:destination-transceiver/wdm-tnl:transceivers" {
       description
         "Augment destination transceiver with additional measured
          parameters.";

       uses transceiver-measured-parameters;
     }

     augment "/te:te/te:lsps/te:lsp/"
           + "te:lsp-actual-route-information/"
           + "te:lsp-actual-route-information/te:type/"
           + "te:numbered-node-hop/te:numbered-node-hop/"
           + "wdm-tnl:node-position/wdm-tnl:transit/"
           + "wdm-tnl:regen-transceivers/"
           + "wdm-tnl:incoming-transceiver/wdm-tnl:transceivers" {
       description
         "Augment regen incoming transceiver with additional measured
          parameters.";

       uses transceiver-measured-parameters;
     }

     augment "/te:te/te:lsps/te:lsp/"
           + "te:lsp-actual-route-information/"
           + "te:lsp-actual-route-information/te:type/"
           + "te:numbered-node-hop/te:numbered-node-hop/"
           + "wdm-tnl:node-position/wdm-tnl:transit/"
           + "wdm-tnl:regen-transceivers/"
           + "wdm-tnl:outgoing-transceiver/wdm-tnl:transceivers" {
       description
         "Augment regen outgoing transceiver with additional measured
          parameters.";

       uses transceiver-measured-parameters;
     }

     augment "/te:te/te:lsps/te:lsp/"
           + "te:lsp-actual-route-information/"
           + "te:lsp-actual-route-information/te:type/"
           + "te:numbered-link-hop/te:numbered-link-hop" {
       description
         "Augment TE LSP with end-to-end media channel
          information.";

       uses e2e-media-channel-info;
     }

     augment "/te:te/te:lsps/te:lsp/"
           + "te:lsp-actual-route-information/"
           + "te:lsp-actual-route-information/te:type/"
           + "te:unnumbered-link-hop/te:unnumbered-link-hop" {
       description
         "Augment TE LSP with end-to-end media channel
          information.";

       uses e2e-media-channel-info;
     }

     /*
      * Augment TE label range information
      */

     augment "/te:te/te:globals/te:named-path-constraints/"
           + "te:named-path-constraint/te:path-in-segment/"
           + "te:label-restrictions/te:label-restriction" {
       description
         "Augment TE label range information for the ingress segment
         of the named path constraint.";
       uses l0-types:wdm-label-range-info;
     }

     augment "/te:te/te:globals/te:named-path-constraints/"
           + "te:named-path-constraint/te:path-out-segment/"
           + "te:label-restrictions/"
           + "te:label-restriction" {
       description
         "Augment TE label range information for the egress segment
         of the named path constraint.";
       uses l0-types:wdm-label-range-info;
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:primary-paths/te:primary-path/"
           + "te:path-in-segment/te:label-restrictions/"
           + "te:label-restriction" {
       description
         "Augment TE label range information for the ingress segment
         of the primay path.";
       uses l0-types:wdm-label-range-info;
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:primary-paths/te:primary-path/"
           + "te:path-out-segment/te:label-restrictions/"
           + "te:label-restriction" {
       description
         "Augment TE label range information for the egress segment
         of the primay path.";
       uses l0-types:wdm-label-range-info;
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:primary-paths/te:primary-path/"
           + "te:primary-reverse-path/"
           + "te:path-in-segment/te:label-restrictions/"
           + "te:label-restriction" {
       description
         "Augment TE label range information for the ingress segment
         of the primay reverse path.";
       uses l0-types:wdm-label-range-info;
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:primary-paths/te:primary-path/"
           + "te:primary-reverse-path/"
           + "te:path-out-segment/te:label-restrictions/"
           + "te:label-restriction" {
       description
         "Augment TE label range information for the egress segment
         of the primay reverse path.";
       uses l0-types:wdm-label-range-info;
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:secondary-paths/te:secondary-path/"
           + "te:path-in-segment/te:label-restrictions/"
           + "te:label-restriction" {
       description
         "Augment TE label range information for the ingress segment
         of the secondary path.";
       uses l0-types:wdm-label-range-info;
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:secondary-paths/te:secondary-path/"
           + "te:path-out-segment/te:label-restrictions/"
           + "te:label-restriction" {
       description
         "Augment TE label range information for the egress segment
         of the secondary path.";
       uses l0-types:wdm-label-range-info;
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:secondary-reverse-paths/te:secondary-reverse-path/"
           + "te:path-in-segment/te:label-restrictions/"
           + "te:label-restriction" {
       description
         "Augment TE label range information for the ingress segment
         of the secondary reverse path.";
       uses l0-types:wdm-label-range-info;
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:secondary-reverse-paths/te:secondary-reverse-path/"
           + "te:path-out-segment/te:label-restrictions/"
           + "te:label-restriction" {
       description
         "Augment TE label range information for the egress segment
         of the secondary reverse path.";
       uses l0-types:wdm-label-range-info;
     }

     /*
      * Augment TE label.
      */
     augment "/te:te/te:globals/te:named-path-constraints/"
           + "te:named-path-constraint/"
           + "te:explicit-route-objects/"
           + "te:route-object-exclude-always/te:type/te:label/"
           + "te:label-hop/te:te-label/te:technology" {
       description
         "Augment TE label hop for the explicit route objects always
         excluded by the path computation with the named path
         constraint.";
       case wdm {
         uses l0-types:wdm-label-hop;
       }
     }

     augment "/te:te/te:globals/te:named-path-constraints/"
           + "te:named-path-constraint/"
           + "te:explicit-route-objects/"
           + "te:route-object-include-exclude/te:type/te:label/"
           + "te:label-hop/te:te-label/te:technology" {
       description
         "Augment TE label hop for the explicit route objects included
         or excluded by the path computation with the named path
         constraint.";
       case wdm {
         uses l0-types:wdm-label-hop;
       }
     }
     augment "/te:te/te:globals/te:named-path-constraints/"
           + "te:named-path-constraint/te:path-in-segment/"
           + "te:label-restrictions/"
           + "te:label-restriction/te:label-start/"
           + "te:te-label/te:technology" {
       description
         "Augment TE label range start for the ingress segment
         of the named path constraint.";
       case wdm {
         uses l0-types:wdm-label-start-end;
       }
     }

     augment "/te:te/te:globals/te:named-path-constraints/"
           + "te:named-path-constraint/te:path-in-segment/"
           + "te:label-restrictions/"
           + "te:label-restriction/te:label-end/"
           + "te:te-label/te:technology" {
       description
         "Augment TE label range end for the ingress segment
         of the named path constraint.";
       case wdm {
         uses l0-types:wdm-label-start-end;
       }
     }

     augment "/te:te/te:globals/te:named-path-constraints/"
           + "te:named-path-constraint/te:path-in-segment/"
           + "te:label-restrictions/te:label-restriction/"
           + "te:label-step/te:technology" {
       description
         "Augment TE label range step for the ingress segment
         of the named path constraint.";
       case wdm {
         uses l0-types:wdm-label-step;
       }
     }

     augment "/te:te/te:globals/te:named-path-constraints/"
           + "te:named-path-constraint/te:path-out-segment/"
           + "te:label-restrictions/"
           + "te:label-restriction/te:label-start/"
           + "te:te-label/te:technology" {
       description
         "Augment TE label range start for the egress segment
         of the named path constraint.";
       case wdm {
         uses l0-types:wdm-label-start-end;
       }
     }

     augment "/te:te/te:globals/te:named-path-constraints/"
           + "te:named-path-constraint/te:path-out-segment/"
           + "te:label-restrictions/"
           + "te:label-restriction/te:label-end/"
           + "te:te-label/te:technology" {
       description
         "Augment TE label range end for the egress segment
         of the named path constraint.";
       case wdm {
         uses l0-types:wdm-label-start-end;
       }
     }

     augment "/te:te/te:globals/te:named-path-constraints/"
           + "te:named-path-constraint/te:path-out-segment/"
           + "te:label-restrictions/te:label-restriction/"
           + "te:label-step/te:technology" {
       description
         "Augment TE label range step for the egress segment
         of the named path constraint.";
       case wdm {
         uses l0-types:wdm-label-step;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:primary-paths/te:primary-path/"
           + "te:optimizations/te:algorithm/te:metric/"
           + "te:optimization-metric/te:explicit-route-exclude-objects/"
           + "te:route-object-exclude-object/te:type/te:label/"
           + "te:label-hop/te:te-label/te:technology" {
       description
         "Augment TE label hop for the optimization of the explicit
         route objects excluded by the path computation of the primary
         path.";
       case wdm {
         uses l0-types:wdm-label-hop;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:primary-paths/te:primary-path/"
           + "te:optimizations/te:algorithm/te:metric/"
           + "te:optimization-metric/te:explicit-route-include-objects/"
           + "te:route-object-include-object/te:type/te:label/"
           + "te:label-hop/te:te-label/te:technology" {
       description
         "Augment TE label hop for the optimization of the explicit
         route objects included by the path computation of the primary
         path.";
       case wdm {
         uses l0-types:wdm-label-hop;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:primary-paths/te:primary-path/"
           + "te:explicit-route-objects/"
           + "te:route-object-exclude-always/te:type/te:label/"
           + "te:label-hop/te:te-label/te:technology" {
       description
         "Augment TE label hop for the explicit route objects always
         excluded by the path computation of the primary path.";
       case wdm {
         uses l0-types:wdm-label-hop;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:primary-paths/te:primary-path/"
           + "te:explicit-route-objects/"
           + "te:route-object-include-exclude/te:type/te:label/"
           + "te:label-hop/te:te-label/te:technology" {
       description
         "Augment TE label hop for the explicit route objects included
         or excluded by the path computation of the primary path.";
       case wdm {
         uses l0-types:wdm-label-hop;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:primary-paths/te:primary-path/"
           + "te:path-in-segment/te:label-restrictions/"
           + "te:label-restriction/te:label-start/"
           + "te:te-label/te:technology" {
       description
         "Augment TE label range start for the ingress segment
         of the primay path.";
       case wdm {
         uses l0-types:wdm-label-start-end;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:primary-paths/te:primary-path/"
           + "te:path-in-segment/te:label-restrictions/"
           + "te:label-restriction/te:label-end/"
           + "te:te-label/te:technology" {
       description
         "Augment TE label range end for the ingress segment
         of the primay path.";
       case wdm {
         uses l0-types:wdm-label-start-end;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:primary-paths/te:primary-path/"
           + "te:path-in-segment/te:label-restrictions/"
           + "te:label-restriction/te:label-step/te:technology" {
       description
         "Augment TE label range step for the ingress segment
         of the primay path.";
       case wdm {
         uses l0-types:wdm-label-step;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:primary-paths/te:primary-path/"
           + "te:path-out-segment/te:label-restrictions/"
           + "te:label-restriction/te:label-start/"
           + "te:te-label/te:technology" {
       description
         "Augment TE label range start for the egress segment
         of the primay path.";
       case wdm {
         uses l0-types:wdm-label-start-end;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:primary-paths/te:primary-path/"
           + "te:path-out-segment/te:label-restrictions/"
           + "te:label-restriction/te:label-end/"
           + "te:te-label/te:technology" {
       description
         "Augment TE label range end for the egress segment
         of the primay path.";
       case wdm {
         uses l0-types:wdm-label-start-end;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:primary-paths/te:primary-path/"
           + "te:path-out-segment/te:label-restrictions/"
           + "te:label-restriction/te:label-step/te:technology" {
       description
         "Augment TE label range end for the egress segment
         of the primay path.";
       case wdm {
         uses l0-types:wdm-label-step;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:primary-paths/te:primary-path/"
           + "te:computed-paths-properties/"
           + "te:computed-path-properties/te:path-properties/"
           + "te:path-route-objects/te:path-route-object/"
           + "te:type/te:label/"
           + "te:label-hop/te:te-label/te:technology" {
       description
         "Augment TE label hop for the route object of the computed
         primary path.";
       case wdm {
         uses l0-types:wdm-label-hop;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:primary-paths/te:primary-path/"
           + "te:primary-reverse-path/"
           + "te:optimizations/te:algorithm/te:metric/"
           + "te:optimization-metric/te:explicit-route-exclude-objects/"
           + "te:route-object-exclude-object/te:type/te:label/"
           + "te:label-hop/te:te-label/te:technology" {
       description
         "Augment TE label hop for the optimization of the explicit
         route objects excluded by the path computation of the primary
         reverse path.";
       case wdm {
         uses l0-types:wdm-label-hop;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:primary-paths/te:primary-path/"
           + "te:primary-reverse-path/"
           + "te:optimizations/te:algorithm/te:metric/"
           + "te:optimization-metric/te:explicit-route-include-objects/"
           + "te:route-object-include-object/te:type/te:label/"
           + "te:label-hop/te:te-label/te:technology" {
       description
         "Augment TE label hop for the optimization of the explicit
         route objects included by the path computation of the primary
         reverse path.";
       case wdm {
         uses l0-types:wdm-label-hop;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:primary-paths/te:primary-path/"
           + "te:primary-reverse-path/"
           + "te:explicit-route-objects/"
           + "te:route-object-exclude-always/"
           + "te:type/te:label/"
           + "te:label-hop/te:te-label/te:technology" {
       description
         "Augment TE label hop for the explicit route objects always
         excluded by the path computation of the primary reverse
         path.";
       case wdm {
         uses l0-types:wdm-label-hop;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:primary-paths/te:primary-path/"
           + "te:primary-reverse-path/"
           + "te:explicit-route-objects/"
           + "te:route-object-include-exclude/"
           + "te:type/te:label/"
           + "te:label-hop/te:te-label/te:technology" {
       description
         "Augment TE label hop for the explicit route objects included
         or excluded by the path computation of the primary reverse
         path.";
       case wdm {
         uses l0-types:wdm-label-hop;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:primary-paths/te:primary-path/"
           + "te:primary-reverse-path/"
           + "te:path-in-segment/te:label-restrictions/"
           + "te:label-restriction/te:label-start/"
           + "te:te-label/te:technology" {
       description
         "Augment TE label range start for the ingress segment
         of the primay reverse path.";
       case wdm {
         uses l0-types:wdm-label-start-end;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:primary-paths/te:primary-path/"
           + "te:primary-reverse-path/"
           + "te:path-in-segment/te:label-restrictions/"
           + "te:label-restriction/te:label-end/"
           + "te:te-label/te:technology" {
       description
         "Augment TE label range end for the ingress segment
         of the primay reverse path.";
       case wdm {
         uses l0-types:wdm-label-start-end;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:primary-paths/te:primary-path/"
           + "te:primary-reverse-path/"
           + "te:path-in-segment/te:label-restrictions/"
           + "te:label-restriction/te:label-step/te:technology" {
       description
         "Augment TE label range step for the ingress segment
         of the primay reverse path.";
       case wdm {
         uses l0-types:wdm-label-step;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:primary-paths/te:primary-path/"
           + "te:primary-reverse-path/"
           + "te:path-out-segment/te:label-restrictions/"
           + "te:label-restriction/te:label-start/"
           + "te:te-label/te:technology" {
       description
         "Augment TE label range start for the egress segment
         of the primay reverse path.";
       case wdm {
         uses l0-types:wdm-label-start-end;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:primary-paths/te:primary-path/"
           + "te:primary-reverse-path/"
           + "te:path-out-segment/te:label-restrictions/"
           + "te:label-restriction/te:label-end/"
           + "te:te-label/te:technology" {
       description
         "Augment TE label range end for the egress segment
         of the primay reverse path.";
       case wdm {
         uses l0-types:wdm-label-start-end;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:primary-paths/te:primary-path/"
           + "te:primary-reverse-path/"
           + "te:path-out-segment/te:label-restrictions/"
           + "te:label-restriction/te:label-step/te:technology" {
       description
         "Augment TE label range step for the egress segment
         of the primay reverse path.";
       case wdm {
         uses l0-types:wdm-label-step;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:primary-paths/te:primary-path/"
           + "te:primary-reverse-path/"
           + "te:computed-paths-properties/te:computed-path-properties/"
           + "te:path-properties/te:path-route-objects/"
           + "te:path-route-object/te:type/te:label/"
           + "te:label-hop/te:te-label/te:technology" {
       description
         "Augment TE label hop for the route object of the computed
         primary reverse path.";
       case wdm {
         uses l0-types:wdm-label-hop;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:secondary-paths/te:secondary-path/"
           + "te:optimizations/te:algorithm/te:metric/"
           + "te:optimization-metric/te:explicit-route-exclude-objects/"
           + "te:route-object-exclude-object/te:type/te:label/"
           + "te:label-hop/te:te-label/te:technology" {
       description
         "Augment TE label hop for the optimization of the explicit
         route objects excluded by the path computation of the
         secondary path.";
       case wdm {
         uses l0-types:wdm-label-hop;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:secondary-paths/te:secondary-path/"
           + "te:optimizations/te:algorithm/te:metric/"
           + "te:optimization-metric/te:explicit-route-include-objects/"
           + "te:route-object-include-object/te:type/te:label/"
           + "te:label-hop/te:te-label/te:technology" {
       description
         "Augment TE label hop for the optimization of the explicit
         route objects included by the path computation of the
         secondary path.";
       case wdm {
         uses l0-types:wdm-label-hop;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:secondary-paths/te:secondary-path/"
           + "te:explicit-route-objects/"
           + "te:route-object-exclude-always/te:type/te:label/"
           + "te:label-hop/te:te-label/te:technology" {
       description
         "Augment TE label hop for the explicit route objects always
         excluded by the path computation of the secondary path.";
       case wdm {
         uses l0-types:wdm-label-hop;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:secondary-paths/te:secondary-path/"
           + "te:explicit-route-objects/"
           + "te:route-object-include-exclude/te:type/te:label/"
           + "te:label-hop/te:te-label/te:technology" {
       description
         "Augment TE label hop for the explicit route objects included
         or excluded by the path computation of the secondary path.";
       case wdm {
         uses l0-types:wdm-label-hop;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:secondary-paths/te:secondary-path/"
           + "te:path-in-segment/te:label-restrictions/"
           + "te:label-restriction/te:label-start/"
           + "te:te-label/te:technology" {
       description
         "Augment TE label range start for the ingress segment
         of the secondary path.";
       case wdm {
         uses l0-types:wdm-label-start-end;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:secondary-paths/te:secondary-path/"
           + "te:path-in-segment/te:label-restrictions/"
           + "te:label-restriction/te:label-end/"
           + "te:te-label/te:technology" {
       description
         "Augment TE label range end for the ingress segment
         of the secondary path.";
       case wdm {
         uses l0-types:wdm-label-start-end;
       }
     }
     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:secondary-paths/te:secondary-path/"
           + "te:path-in-segment/te:label-restrictions/"
           + "te:label-restriction/te:label-step/te:technology" {
       description
         "Augment TE label range step for the ingress segment
         of the secondary path.";
       case wdm {
         uses l0-types:wdm-label-step;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:secondary-paths/te:secondary-path/"
           + "te:path-out-segment/te:label-restrictions/"
           + "te:label-restriction/te:label-start/"
           + "te:te-label/te:technology" {
       description
         "Augment TE label range start for the egress segment
         of the secondary path.";
       case wdm {
         uses l0-types:wdm-label-start-end;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:secondary-paths/te:secondary-path/"
           + "te:path-out-segment/te:label-restrictions/"
           + "te:label-restriction/te:label-end/"
           + "te:te-label/te:technology" {
       description
         "Augment TE label range end for the egress segment
         of the secondary path.";
       case wdm {
         uses l0-types:wdm-label-start-end;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:secondary-paths/te:secondary-path/"
           + "te:path-out-segment/te:label-restrictions/"
           + "te:label-restriction/te:label-step/te:technology" {
       description
         "Augment TE label range step for the egress segment
         of the secondary path.";
       case wdm {
         uses l0-types:wdm-label-step;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:secondary-paths/te:secondary-path/"
           + "te:computed-paths-properties/"
           + "te:computed-path-properties/"
           + "te:path-properties/te:path-route-objects/"
           + "te:path-route-object/te:type/te:label/"
           + "te:label-hop/te:te-label/te:technology" {
       description
         "Augment TE label hop for the route object of the computed
         secondary path.";
       case wdm {
         uses l0-types:wdm-label-hop;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:secondary-reverse-paths/te:secondary-reverse-path/"
           + "te:optimizations/te:algorithm/te:metric/"
           + "te:optimization-metric/te:explicit-route-exclude-objects/"
           + "te:route-object-exclude-object/te:type/te:label/"
           + "te:label-hop/te:te-label/te:technology" {
       description
         "Augment TE label hop for the optimization of the explicit
         route objects excluded by the path computation of the
         secondary reverse path.";
       case wdm {
         uses l0-types:wdm-label-hop;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:secondary-reverse-paths/te:secondary-reverse-path/"
           + "te:optimizations/te:algorithm/te:metric/"
           + "te:optimization-metric/te:explicit-route-include-objects/"
           + "te:route-object-include-object/te:type/te:label/"
           + "te:label-hop/te:te-label/te:technology" {
       description
         "Augment TE label hop for the optimization of the explicit
         route objects included by the path computation of the
         secondary reverse path.";
       case wdm {
         uses l0-types:wdm-label-hop;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:secondary-reverse-paths/te:secondary-reverse-path/"
           + "te:explicit-route-objects/"
           + "te:route-object-exclude-always/te:type/te:label/"
           + "te:label-hop/te:te-label/te:technology" {
       description
         "Augment TE label hop for the explicit route objects always
         excluded by the path computation of the secondary reverse
         path.";
       case wdm {
         uses l0-types:wdm-label-hop;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:secondary-reverse-paths/te:secondary-reverse-path/"
           + "te:explicit-route-objects/"
           + "te:route-object-include-exclude/te:type/te:label/"
           + "te:label-hop/te:te-label/te:technology" {
       description
         "Augment TE label hop for the explicit route objects included
         or excluded by the path computation of the secondary reverse
         path.";
       case wdm {
         uses l0-types:wdm-label-hop;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:secondary-reverse-paths/te:secondary-reverse-path/"
           + "te:path-in-segment/te:label-restrictions/"
           + "te:label-restriction/te:label-start/"
           + "te:te-label/te:technology" {
       description
         "Augment TE label range start for the ingress segment
         of the secondary reverse path.";
       case wdm {
         uses l0-types:wdm-label-start-end;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:secondary-reverse-paths/te:secondary-reverse-path/"
           + "te:path-in-segment/te:label-restrictions/"
           + "te:label-restriction/te:label-end/"
           + "te:te-label/te:technology" {
       description
         "Augment TE label range end for the ingress segment
         of the secondary reverse path.";
       case wdm {
         uses l0-types:wdm-label-start-end;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:secondary-reverse-paths/te:secondary-reverse-path/"
           + "te:path-in-segment/te:label-restrictions/"
           + "te:label-restriction/te:label-step/te:technology" {
       description
         "Augment TE label range step for the ingress segment
         of the secondary reverse path.";
       case wdm {
         uses l0-types:wdm-label-step;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:secondary-reverse-paths/te:secondary-reverse-path/"
           + "te:path-out-segment/te:label-restrictions/"
           + "te:label-restriction/te:label-start/"
           + "te:te-label/te:technology" {
       description
         "Augment TE label range start for the egress segment
         of the secondary reverse path.";
       case wdm {
         uses l0-types:wdm-label-start-end;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:secondary-reverse-paths/te:secondary-reverse-path/"
           + "te:path-out-segment/te:label-restrictions/"
           + "te:label-restriction/te:label-end/"
           + "te:te-label/te:technology" {
       description
         "Augment TE label range end for the egress segment
         of the secondary reverse path.";
       case wdm {
         uses l0-types:wdm-label-start-end;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:secondary-reverse-paths/te:secondary-reverse-path/"
           + "te:path-out-segment/te:label-restrictions/"
           + "te:label-restriction/te:label-step/te:technology" {
       description
         "Augment TE label range step for the egress segment
         of the secondary reverse path.";
       case wdm {
         uses l0-types:wdm-label-step;
       }
     }

     augment "/te:te/te:tunnels/te:tunnel/"
           + "te:secondary-reverse-paths/te:secondary-reverse-path/"
           + "te:computed-paths-properties/"
           + "te:computed-path-properties/"
           + "te:path-properties/te:path-route-objects/"
           + "te:path-route-object/te:type/te:label/"
           + "te:label-hop/te:te-label/te:technology" {
       description
         "Augment TE label hop for the route object of the computed
         secondary reverse path.";
       case wdm {
         uses l0-types:wdm-label-hop;
       }
     }

     augment "/te:te/te:lsps/"
           + "te:lsp/te:lsp-actual-route-information/"
           + "te:lsp-actual-route-information/te:type/te:label/"
           + "te:label-hop/te:te-label/te:technology" {
       description
         "Augment TE label hop for the actual route of the LSP.";
       case wdm {
         uses l0-types:wdm-label-hop;
       }
     }
   }
   <CODE ENDS>

                      Figure 3: WDM Tunnel YANG module

6.  Security Considerations

   The configuration, state, and action data defined in this document
   are designed to be accessed via a management protocol with a secure
   transport layer, such as NETCONF [RFC6241] or RESTCONF [RFC8040].
   The NETCONF access control model [RFC8341] provides the means to
   restrict access for particular NETCONF users to a preconfigured
   subset of all available NETCONF protocol operations and content.

   There are a number of data nodes defined in this YANG module that are
   writable/creatable/deletable (i.e., config true, which is the
   default).  These data nodes may be considered sensitive or vulnerable
   in some network environments.  Write operations (e.g., edit-config)
   to these data nodes without proper protection can have a negative
   effect on network operations.  These are the subtrees and data nodes
   and their sensitivity/vulnerability:

   *  /te:te/te:tunnels/te:tunnel

   *  /te:te/.../te:te-bandwidth/te:technology

   *  /te:te/.../te:type/te:label/te:label-hop/te:te-label/te:technology

   *  /te:te/.../te:label-restrictions/te:label-restriction/te:label-
      start/te:te-label/te:technology

   *  /te:te/.../te:label-restrictions/te:label-restriction/te:label-
      end/te:te-label/te:technology

   *  /te:te/.../te:label-restrictions/te:label-restriction/

   Editors note: we are using simplified description by folding similar
   branches to avoid repetition.

7.  IANA Considerations

   This document requests IANA to register the following URIs in the
   "ns" subregistry within the "IETF XML Registry" [RFC3688].  Following
   the format in [RFC3688], the following registrations are requested.

      URI: urn:ietf:params:xml:ns:yang:ietf-wdm-tunnel
      Registrant Contact: The IESG
      XML: N/A; the requested URI is an XML namespace.

   This document requests IANA to register the following YANG modules in
   the "IANA Module Names" [RFC6020].  Following the format in
   [RFC6020], the following registrations are requested:

      name: ietf-wdm-tunnel
      namespace: urn:ietf:params:xml:ns:yang:ietf-wdm-tunnel
      prefix: wdm-tnl
      reference: RFC XXXX

   RFC Editor: Please replace XXXX with the RFC number assigned to this
   document.

8.  References

8.1.  Normative References

   [I-D.ietf-ccamp-flexigrid-yang]
              de Madrid, U. A., Burrero, D. P., King, D., Lee, Y., and
              H. Zheng, "A YANG Data Model for Flexi-Grid Optical
              Networks", Work in Progress, Internet-Draft, draft-ietf-
              ccamp-flexigrid-yang-18, 17 March 2025,
              <https://datatracker.ietf.org/doc/html/draft-ietf-ccamp-
              flexigrid-yang-18>.

   [I-D.ietf-teas-yang-te]
              Saad, T., Gandhi, R., Liu, X., Beeram, V. P., and I.
              Bryskin, "A YANG Data Model for Traffic Engineering
              Tunnels, Label Switched Paths and Interfaces", Work in
              Progress, Internet-Draft, draft-ietf-teas-yang-te-37, 9
              October 2024, <https://datatracker.ietf.org/doc/html/
              draft-ietf-teas-yang-te-37>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC3688]  Mealling, M., "The IETF XML Registry", BCP 81, RFC 3688,
              DOI 10.17487/RFC3688, January 2004,
              <https://www.rfc-editor.org/rfc/rfc3688>.

   [RFC6020]  Bjorklund, M., Ed., "YANG - A Data Modeling Language for
              the Network Configuration Protocol (NETCONF)", RFC 6020,
              DOI 10.17487/RFC6020, October 2010,
              <https://www.rfc-editor.org/rfc/rfc6020>.

   [RFC6241]  Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,
              and A. Bierman, Ed., "Network Configuration Protocol
              (NETCONF)", RFC 6241, DOI 10.17487/RFC6241, June 2011,
              <https://www.rfc-editor.org/rfc/rfc6241>.

   [RFC7446]  Lee, Y., Ed., Bernstein, G., Ed., Li, D., and W. Imajuku,
              "Routing and Wavelength Assignment Information Model for
              Wavelength Switched Optical Networks", RFC 7446,
              DOI 10.17487/RFC7446, February 2015,
              <https://www.rfc-editor.org/rfc/rfc7446>.

   [RFC7699]  Farrel, A., King, D., Li, Y., and F. Zhang, "Generalized
              Labels for the Flexi-Grid in Lambda Switch Capable (LSC)
              Label Switching Routers", RFC 7699, DOI 10.17487/RFC7699,
              November 2015, <https://www.rfc-editor.org/rfc/rfc7699>.

   [RFC7950]  Bjorklund, M., Ed., "The YANG 1.1 Data Modeling Language",
              RFC 7950, DOI 10.17487/RFC7950, August 2016,
              <https://www.rfc-editor.org/rfc/rfc7950>.

   [RFC8040]  Bierman, A., Bjorklund, M., and K. Watsen, "RESTCONF
              Protocol", RFC 8040, DOI 10.17487/RFC8040, January 2017,
              <https://www.rfc-editor.org/rfc/rfc8040>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

   [RFC8341]  Bierman, A. and M. Bjorklund, "Network Configuration
              Access Control Model", STD 91, RFC 8341,
              DOI 10.17487/RFC8341, March 2018,
              <https://www.rfc-editor.org/rfc/rfc8341>.

   [RFC9094]  Zheng, H., Lee, Y., Guo, A., Lopez, V., and D. King, "A
              YANG Data Model for Wavelength Switched Optical Networks
              (WSONs)", RFC 9094, DOI 10.17487/RFC9094, August 2021,
              <https://www.rfc-editor.org/rfc/rfc9094>.

8.2.  Informative References

   [RFC6163]  Lee, Y., Ed., Bernstein, G., Ed., and W. Imajuku,
              "Framework for GMPLS and Path Computation Element (PCE)
              Control of Wavelength Switched Optical Networks (WSONs)",
              RFC 6163, DOI 10.17487/RFC6163, April 2011,
              <https://www.rfc-editor.org/rfc/rfc6163>.

   [RFC7698]  Gonzalez de Dios, O., Ed., Casellas, R., Ed., Zhang, F.,
              Fu, X., Ceccarelli, D., and I. Hussain, "Framework and
              Requirements for GMPLS-Based Control of Flexi-Grid Dense
              Wavelength Division Multiplexing (DWDM) Networks",
              RFC 7698, DOI 10.17487/RFC7698, November 2015,
              <https://www.rfc-editor.org/rfc/rfc7698>.

Acknowledgments

   This work is also partially funded by the Spanish State Research
   Agency under the project AgileMon (AEI PID2019-104451RB-C21) and by
   the Spanish Ministry of Science, Innovation and Universities under
   the program for the training of university lecturers (Grant number:
   FPU19/05678).

Contributors

   Daniel King
   Old Dog Consulting
   Email: daniel@olddog.co.uk


   Haomian Zheng
   Huawei Technologies
   H1, Xiliu Beipo Village, Songshan Lake
   Dongguan
   China
   Email: zhenghaomian@huawei.com


   Italo Busi
   Huawei Technologies
   Email: italo.busi@huawei.com


   Oscar Gonzalez de Dios
   Telefonica
   Email: oscar.gonzalezdedios@telefonica.com


   Victor Lopez
   Nokia
   Email: victor.lopez@nokia.com


   Dieter Beller
   Nokia
   Email: Dieter.Beller@nokia.com


   Ricard Vilalta
   CTTC
   Email: ricard.vilalta@cttc.es


   Young Lee
   Samsung
   Email: younglee.tx@gmail.com


   Bin Yeong Yoon
   ETRI
   Email: byyun@etri.re.kr


   Daniel Michaud Vallinoto
   Universidad Autonoma de Madrid
   Email: daniel.michaud@estudiante.uam.es


   Zafar Ali
   Cisco
   Email: zali@cisco.com


   Esther Le Rouzic
   Orange
   Email: esther.lerouzic@orange.com


   Julien Meuric
   Orange
   Email: julien.meuric@orange.com


   Gert Grammel
   Juniper
   Email: ggrammel@juniper.net


   Roberto Manzotti
   Cisco
   Email: manzoro@gmail.com


Authors' Addresses

   Aihua Guo
   Futurewei Technologies
   Email: aihuaguo.ietf@gmail.com


   Sergio Belotti
   Nokia
   Email: Sergio.belotti@nokia.com


   G. Galimberti
   Individual
   Email: ggalimbe56@gmail.com


   Jorge E. Lopez de Vergara Mendez
   Naudit HPCN
   Email: jorge.lopez_vergara@uam.es


   Daniel Perdices Burrero
   Universidad Autonoma de Madrid
   Email: daniel.perdices@uam.es
